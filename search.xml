<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>驾驶行为特征选取</title>
      <link href="/posts/600403/"/>
      <url>/posts/600403/</url>
      
        <content type="html"><![CDATA[<p>横向加速或侧向运动代表行驶事件，如左右转弯和变道，而纵向加速则代表车辆制动和加速。</p><p>根据论文[1]中可以看出总共有13个驾驶事件，见下图</p><p><img src= "/img/loading.gif" data-lazy-src="/image/pages/DrivingEvents.png" alt="驾驶事件"></p><p>一个简单的线性插值用来处理这个不完整数据集。</p><p>论文[1]中根据实验内容提出了下面的13种驾驶事件</p><ul><li><span class="inline-tag blue"><strong>brake (B)</strong></span></li><li><span class="inline-tag blue"><strong>sudden brake (SB)</strong></span></li><li><span class="inline-tag blue"><strong>accelerate (A)</strong></span></li><li><span class="inline-tag blue"><strong>sudden accelerate (SA)</strong></span></li><li><span class="inline-tag blue"><strong>u-turn (U)</strong></span></li><li><span class="inline-tag blue"><strong>left turn (L)</strong></span></li><li><span class="inline-tag blue"><strong>sudden left turn (SL)</strong></span></li><li><span class="inline-tag blue"><strong>right turn (R)</strong></span></li><li><span class="inline-tag blue"><strong>sudden right turn (SR)</strong></span></li><li><span class="inline-tag blue"><strong>lane change left (CL)</strong></span></li><li><span class="inline-tag blue"><strong>sudden lane change left (SCL)</strong></span></li><li><span class="inline-tag blue"><strong>lane change right(CR)</strong></span></li><li><span class="inline-tag blue"><strong>sudden lane change right(SCR)</strong></span></li></ul><p>论文[2]中包含着5种攻击性驾驶事件</p><ul><li><span class="inline-tag green"><strong>over speed limit (OS)</strong></span></li><li><span class="inline-tag green"><strong>sudden brake (SB)</strong></span></li><li><span class="inline-tag green"><strong>sudden acceleration (SA)</strong></span></li><li><span class="inline-tag green"><strong>sudden turn (ST)</strong></span></li><li><span class="inline-tag green"><strong>sudden lane change (SC)</strong></span></li></ul><p>检测到的每一个突然的驾驶事件都有一个与之关联的地理位置，以指示这些事件发生的位置。将指定半径内的事件分组在一起，生成突发驾驶事件的热图。一个聚集了大量事故的区域将表明一个潜在的事故高发点。司机在将要经过这些点的时候提前预警，这将有效地减少交通事故的风险。局部的危险驾驶事件可以聚集在一起，形成一个潜在的事故高发点，可以部署为接近的车辆作为一个基于位置的先进警告服务。</p><p>论文[3]中驾驶事件类型选择了下面7种。</p><ul><li><span class="inline-tag red"><strong>Aggressive breaking</strong></span></li><li><span class="inline-tag red"><strong>Aggressive acceleration</strong></span></li><li><span class="inline-tag red"><strong>Aggressive left turn</strong></span></li><li><span class="inline-tag red"><strong>Aggressive right turn</strong></span></li><li><span class="inline-tag red"><strong>Aggressive left lane change</strong></span></li><li><span class="inline-tag red"><strong>Aggressive right lane change</strong></span></li><li><span class="inline-tag red"><strong>Non-aggressive event</strong></span></li></ul><p>参考论文：</p><ol><li><p>Saiprasert, Chalermpol &amp; Pholprasit, T. &amp; Pattara-atikom, Wasan. (2013). Detecting Driving Events Using Smartphone. 20th ITS World Congress. </p></li><li><p>Saiprasert, Chalermpol &amp; Thajchayapong, Suttipong &amp; Pholprasit, T. &amp; Tanprasert, Chularat. (2014). Driver behaviour profiling using smartphone sensory data in a V2I environment. 10.1109/ICCVE.2014.7297609. </p></li><li><p>Ferreira J Júnior, Carvalho E, Ferreira BV, de Souza C, Suhara Y, et al. (2017) Driver behavior profiling: An investigation with different smartphone sensors and machine learning. PLOS ONE 12(4): e0174959. <a href="https://doi.org/10.1371/journal.pone.0174959" target="_blank" rel="noopener">https://doi.org/10.1371/journal.pone.0174959</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> paper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> driving behavior proﬁling </tag>
            
            <tag> summary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Driver behavior profiling: An investigation with different smartphone sensors and machine learning</title>
      <link href="/posts/600001/"/>
      <url>/posts/600001/</url>
      
        <content type="html"><![CDATA[<h1 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h1><p><strong>背景</strong><br>驾驶员的行为影响交通安全、燃料/能源消耗和气体排放。司机行为分析试图理解和积极影响司机的行为。通常驾驶员分析人物包括驾驶数据的自动收集和能生成一个分类来描绘出驾驶员攻击性的属性的计算机模型应用。不同的传感器和方法被应用在任务中，然而低成本解决方案和高性能仍然是研究的目标。</p><p><strong>本文</strong><br>本文对不同的Android智能手机传感器和分类算法进行了研究，以评估哪一种传感器/方法的组装能够使分类具有更高的性能。结果表明，特定的传感器组合和智能方法可以提高分类性能。</p><h1 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h1><p>驾驶员监控和分析(Drivermonitoring andanalysis)或驾驶员行为分析(driverbehaviorprofiling)是自动收集驾驶数据(如速度、加速、刹车、转向、位置)并应用计算模型来为驾驶员生成安全评分的过程。</p><p>驾驶数据收集可以通过多种类型的传感器来实现，从智能手机中的通用设备，到监控摄像头、远程信息盒和车载诊断适配器等专用设备。</p><p><strong>本文的贡献</strong></p><p>本文的主要贡献是在现实世界的实验背景下，评估机器学习算法和Android智能手机传感器的多种组合在检测攻击性驾驶事件的任务中的性能。本文执行数据收集阶段，驾驶一辆车，并从几个不同的传感器收集数据，同时执行不同的调动。本文将介绍机器学习方法如何在任务中使用，并评估传感器和技术组合的准确性，旨在找到传感器/技术与每一类行为的最佳匹配。</p><h1 id="Related-work"><a href="#Related-work" class="headerlink" title="Related work"></a>Related work</h1><p><span class="inline-tag blue">Nericell由Mohan等人[17]</span>提出，是一款Windows Mobile智能手机应用程序，用于监测道路和交通状况。它使用智能手机的加速计来检测路面坑洼和刹车事件。它还使用麦克风来检测喇叭声，以及GPS/全球移动通信系统(GSM)来获得车辆的定位和速度。通过比较一组经验预先设定的阈值与加速度计数据的突然变化或与N秒滑动窗口内的平均值来检测刹车、颠簸和坑洞。没有使用MLA来探测这类事件。一些事件检测结果的False Positives(FPs)和Fale Negatives(FNs)包括:4.4%的FN, 22.2%的FP的刹车事件;低速(&lt;25公里/小时)检测颠簸/坑槽，FN为23%，FP为5%;FN和FP用于检测暴露车辆(如摩托车)的喇叭声。</p><p><span class="inline-tag blue">Dai and colleagues[9]</span>提出了一种Android应用程序，旨在实时检测和警报危险驾驶事件，通常与酒后驾驶有关。该应用程序使用智能手机的加速计和方向(偏航、俯仰和滚转角)传感器来检测异常的曲线运动(ACM)和保持速度的问题(PMS)，这是醉酒驾驶相关行为的两大类。用一系列方程来确定横向和纵向加速度矢量。如果在5秒时间窗内横向加速度的最大值和最小值之间的差异超过经验阈值，则ACM事件被检测。在任何给定时间，如果纵向加速度超过正或负的固定经验值，则检测PMS。与[17]类似，不使用MLA进行事件检测。实验结果:异常曲线运动FN为0%，FP为0.49%;速度控制问题的FN为0%，FP为2.90%。</p><p><span class="inline-tag blue">Johnson和Trivedi[10]</span>创建了一个名为MIROAD的iPhone应用程序。MIROAD使用基于智能手机的磁强计、加速计、陀螺仪和GPS传感器融合来检测主动驾驶事件，并据此将驾驶员的驾驶风格分为主动驾驶和非主动驾驶。基于DTW算法，采用单一分类器检测攻击事件。所有的处理都在智能手机上实时执行。实验分析表明，97%的攻击事件被正确检测到。</p><p><span class="inline-tag blue">WreckWatch由White等人[18]</span>提出，是一款基于Android智能手机的客户端/服务器应用程序，用于检测车祸。客户端应用程序检测事故，记录相关数据，并将其发送给服务器应用程序，服务器应用程序可以通知相关部门。失事监视客户端使用来自加速度计、GPS和麦克风的数据，并使用基于阈值的过滤来检测事故。事故预测框架由电话状态的11元组模型和评估模型是否表示事故的函数组成。模型变量包括在任何方向上经历的最大加速度，以及是否有响亮的声音发生的指示。一个触发事故检测的场景是当加速度、声音和车辆速度都高于经验阈值。与[9,17]相似，事故检测不采用MLA。实验结果表明，手机掉落不太可能导致FPs，智能手机可能检测不到一些事故，声学数据不足以检测出事故。</p><p><span class="inline-tag blue">Araujo and colleagues[15]</span>展示了一款智能手机应用程序，可以将油耗效率作为驾驶员行为的一个功能来评估。该应用程序还提供了实时驾驶提示，如shift gear earlier和accelerating too high。该应用程序使用OBD蓝牙适配器和Torque Pro智能手机应用程序从车辆传感器收集数据(例如，速度、加速度、转速)，而不是从智能手机传感器收集数据。数据采集完成后，app提取一系列特征，并对其应用三个分类器(一个线性判别器和两个模糊系统)。所有的处理都在智能手机上实时执行。</p><p><span class="inline-tag blue">Eren等人[11]</span>提出了一种iPhone应用程序，可以根据危险驾驶事件将驾驶员行为分类为安全或危险。该应用程序可以检测突然转弯、车道偏离、刹车和加速事件。用于事件检测的传感器有智能手机的加速度计、陀螺仪和磁强计。应用程序使用端点检测算法来划分事件的开始和结束时间。通过DTW算法将标定后的事件与模板事件数据进行比较。最后，贝叶斯分类器根据一段时间内发生的事件数量，将驾驶员的行为标记为安全或危险。实验结果表明，15个驾驶员中有14个(93.3%)被正确分类。值得注意的是，本文仅提供了驱动分类结果。因此，不提供事件分类性能结果。</p><p><span class="inline-tag blue">Fazeen和同事[19]</span>使用Android智能手机加速计和GPS来识别车辆状况(速度和换位)、驾驶模式(加速/减速和变道)和道路状况(光滑、不平整、粗糙、有颠簸或坑洼)。检测事件的主要方法是计算连续加速度计读数在某些轴上的持续时间、差异和斜率，并将它们与经验的固定/动态阈值进行比较。例如，工作状态，安全加减速在y轴上的重力不超过0.3g。与[9,17,18]类似，不使用MLA进行事件检测。实验结果表明，路面异常分类准确率为:凹凸路面异常分类准确率为81.5%，坑洼路面异常分类准确率为72.2%，高低路面异常分类准确率为75%，平坦路面异常分类准确率为91.5%，高低路面异常分类准确率为89.4%。</p><p><span class="inline-tag blue">Castignani等人[12]</span>提出了一个基于模糊逻辑的驾驶员行为分析移动工具，该工具利用了Android智能手机中的加速度计、磁强计和重力传感器。这个工具将驾驶员的行为分为Normal, Moderate, 和Aggressive，对应的驾驶分数在0(最好)和100(最差)之间。由于传感器数据是在byUBI-Meter移动应用程序中采集并存储在本地智能手机上，因此分类和评分不进行实时处理。随后，这些数据被发送到Internet上的远程服务器进行处理。Saiprasert和他的合作者[13]使用了GPS、加速度计和智能手机磁强计传感器来描述司机的行为:Very Safe,Safe,Aggressive, 和Very Aggressive。该剖面是通过检测相关驾驶事件实时计算的。事件检测是由DTW算法[20]的变化来执行的。</p><p><span class="inline-tag blue">SenseFleet由Castignani等人[14]</span>提出，是一个针对Android智能手机的驾驶员行为分析平台，能够独立于移动设备和车辆检测危险驾驶事件。该手机应用程序从加速度计、磁强计、重力传感器和GPS智能手机传感器收集数据，并利用模糊系统检测旅途中可能发生的危险事件，如超速、转弯、加速和刹车。应用程序计算每次行车的驾驶分数在0(最差)到100(最好)之间，作为检测到的危险事件的函数。所有的处理都是在智能手机上实时完成的。作者做了几个实验。在其中一个实验中，应用程序正确识别了90%以上的风险事件。</p><p><span class="inline-tag blue">Wahlstrom, Skog和Handel[21]</span>提出了一个基于轮胎滑移(滑移)和车辆翻车的理论可能性的检测危险车辆转弯事件的框架。全球导航卫星系统(GNSS)是Android智能手机GPS的总称，是唯一用于事件检测的传感器。利用经典力学方程，定义了滑移和翻车的理论阈值。滑动阈值根据切向和旋转速度、切向加速度以及车辆轮胎与道路之间的摩擦系数来定义。车辆翻车阈值是根据车辆的重心、轨道宽度和高度定义的。与[9,17 19]类似，事件检测中没有使用MLA。从三款不同的Android智能手机收集的GNSS数据的实验分析显示，FP和FN的平均比率为13%是最佳结果。</p><p>本文根据研究发现了一些值得注意的地方</p><ol><li>除了[21]之外，所有的论文都使用 <span class="inline-tag red"><strong>传感器融合数据</strong></span>作为事件检测算法的输入</li><li>采用的MLAs可归结为 <span class="inline-tag red"><strong>模糊逻辑</strong></span>[12,14,15]或 <span class="inline-tag red"><strong>DTW的变体</strong></span>[10,11,13]</li><li>最近的论文使用 <span class="inline-tag red"><strong>智能手机传感器</strong></span>，而不是车辆或远程信息箱传感器</li><li>一些论文[9,17-19,21]没有使用MLAs来检测驱动事件，而是使用 <span class="inline-tag red"><strong>物理方程或固定/动态阈值或两者的结合</strong></span>来达到这一目的。</li></ol><p>本文是在本地运行机器学习算法，但是作者表示未来的版本可能会运行在基于云的方式上，如[22,23]所示。其他与驾驶员行为相关的方法也与社会机制有关，如Song和Smith[24]所做的评价，即在高占有率的收费车道上研究驾驶员行为。在Sun和同事[25]的工作中，我们可以看到一个关于智能和互联社区的更全面的方法。关于基于智能手机的汽车传感系统的更全面的比较，请参考Engelbrecht和他的同事[26]的研究。</p><h1 id="Machine-learning-algorithms"><a href="#Machine-learning-algorithms" class="headerlink" title="Machine learning algorithms"></a>Machine learning algorithms</h1><p>本文比较了四种MLA的性能:人工神经网络(ANN)、支持向量机(SVM)、随机森林(RF)和贝叶斯网络(BN)。之所以选择这些MLAs是因为它们在分类问题的文献中大量出现，而且它们代表了不同的机器学习“tribes”，保证了机器学习算法的多样性。本节主要解释上述MLAs的基本概念。</p><ul><li><strong>Artificial neural networks(ANN)</strong></li><li><strong>Support vector machines(SVM)</strong></li><li><strong>Random forrest(RF)</strong></li><li><strong>Bayesian networks(BN)</strong></li></ul><h1 id="Methodology"><a href="#Methodology" class="headerlink" title="Methodology"></a>Methodology</h1><p>将工作建模为一个 <span class="inline-tag red"><strong>多标签监督学习分类问题</strong></span>，其中标签是 <span class="inline-tag red"><strong>驾驶事件类型</strong></span>(driving events types)。<br>本文工作的目标是识别运动传感器(及其轴)、学习算法(及其参数)和滑动窗口(nf)中的帧数的最佳组合，以检测单个驾驶事件类型。</p><p>在表单中定义了一个计算程序集</p><span class="inline-tag grey">$EA = \lbrace 1:sensor, \ 2:sensor \ axis(es),\  3:MLA,\  4:MLA \ configuration,\  5:nf \ \rbrace$</span>  <p>通过训练、测试和评估由指定的MLA(element #3)及其配置参数(element #4)生成的分类器的性能，对传感器(element #1)、它的轴(es)(element #2)和滑动窗口中的帧数(element #5)进行识别。通过更改该程序集中元素的值，本文实现了不同的驾驶员事件检测性能。因此，该评估将对元素值的几个组合进行评估，以揭示对每种驾驶事件类型表现最好的组合。</p><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><p>图1显示了评估管道的高级视图。</p><p><img src= "/img/loading.gif" data-lazy-src="/image/pages/g001.png" alt="图1. 评估管道的高层视图，显示了从原始传感器数据采样到培训、测试和评估MLAs的处理步骤"></p><p><span class="inline-tag red"><strong>第一步</strong></span></p><p> 对智能手机传感器原始数据进行采样，并将其从 <span class="inline-tag red"><strong>设备坐标系转换为地球坐标系</strong></span>(图2)。为了实现车辆内部的设备位置独立，这种平移是必要的。转换后的传感器数据存储在智能手机文件系统中。</p><p><img src= "/img/loading.gif" data-lazy-src="/image/pages/g002.png" alt="图2. 转换坐标系"></p><p><span class="inline-tag red"><strong>第二步</strong></span></p><p> 从智能手机中检索转换后的传感器数据文件，并将其作为输入来生成<span class="inline-tag red"><strong>属性向量数据集</strong></span>。</p><p><span class="inline-tag red"><strong>第三步</strong></span></p><p>利用属性向量数据集对MLAs的性能进行训练、测试和评估。</p><p>如图1所示，第一个管道步骤在智能手机上执行，而第二个和最后一个步骤在普通计算机上执行。</p><p><span class="inline-tag red"><strong>评估性能</strong></span></p><p>本文用来评估每种驾驶事件类型组合性能的度量是<span class="inline-tag red"><strong>ROC曲线(AUC)下的面积</strong></span>[33,34]。分类器的AUC范围为0.0(最差)到1.0(最好)，但现实分类器的AUC不应该小于0.5，这相当于随机猜测。因此，计算程序集AUC越接近1.0，它在检测特定驾驶事件类型方面就越好。</p><h2 id="Evaluation-assembly"><a href="#Evaluation-assembly" class="headerlink" title="Evaluation assembly"></a>Evaluation assembly</h2><h3 id="sensor"><a href="#sensor" class="headerlink" title="sensor"></a>sensor</h3><p><span class="inline-tag red"><strong>传感器(sensor)</strong></span>是评估组装的第一个元素，它代表了以下Android智能手机运动传感器之一: <span class="inline-tag red"><strong>加速度计(Acc)，线性加速度(LinAcc)，磁强计(Mag)和陀螺仪(Gyr)</strong></span>。</p><ol><li><span class="inline-tag blue"><strong>加速度计</strong></span>测量施加在设备上的加速度，单位是米每秒的平方(m/s2)，包括重力。</li><li><span class="inline-tag blue"><strong>线性加速度传感器</strong></span>类似于加速度计，但不包括重力。</li><li><span class="inline-tag blue"><strong>磁强计</strong></span>测量应用于设备的微特斯拉(μT)磁场的力，其工作原理类似于磁铁。</li><li><span class="inline-tag blue"><strong>陀螺仪</strong></span>以每秒弧度(rad/s)来测量设备轴的旋转速率。</li></ol><p>这些传感器提供了一个在标准传感器坐标系中具有纳秒精度的三维(x,yez)时间序列(相对于设备)</p><h3 id="sensor-axis-es"><a href="#sensor-axis-es" class="headerlink" title="sensor axis(es)"></a>sensor axis(es)</h3><p><span class="inline-tag red"><strong>传感器轴(sensor axis(es))</strong></span>是评估组装的第二个元素</p><p>该元素的可用值为</p><ul><li><span class="inline-tag blue"><strong>all 3 axes</strong></span></li><li><span class="inline-tag blue"><strong>x axis alone</strong></span></li><li><span class="inline-tag blue"><strong>y axis alone</strong></span></li><li><span class="inline-tag blue"><strong>z axis alone</strong></span></li></ul><p>比如：加速度计产生了以下数据集</p><span class="inline-tag grey">    $accelerometer(with \ data\ from\ all\ three\ axes),\ accelerometer_x,\ accelerometer_y,\ accelerometer_z$</span><p>其中唯一的例外是 <span class="inline-tag red"><strong>磁强计</strong></span>,x轴的值在转换到地球的坐标系统后总是0或接近。因此<span class="inline-tag red"><strong>没有omagnetometer_x 数据集</strong></span>。</p><p>本文评估数据来自产生4个数据集的3个传感器,和产生3个数据集的1个传感器,总共有<span class="inline-tag red"><strong>3*4+3=15</strong></span>个数据集。本文在不同的数据集中分离传感器轴，以观察是否有任何一个轴可以作为检测特定驾驶员事件类型的最佳轴。</p><h3 id="MLA"><a href="#MLA" class="headerlink" title="MLA"></a>MLA</h3><p><span class="inline-tag red"><strong>MLA</strong></span>是评估组装的第三个元素<br>评估了MLP、SVM、RF和BN MLAs的分类性能。本文将这些算法的WEKA(版本3.8.0)实现与LIBSVM[35]库(版本3.17)结合使用。本文使用10倍交叉验证来训练和测试这些分类器，以最小化过拟合。</p><h3 id="Algorithm-configuration"><a href="#Algorithm-configuration" class="headerlink" title="Algorithm configuration"></a>Algorithm configuration</h3><p><span class="inline-tag red"><strong>算法配置(Algorithm configuration)</strong></span>是评估组装的第四个元素<br>本文执行了参数网格搜索，以评估表1中参数值的每一种可能组合。本文对大多数参数值进行实验设置，并遵循[36]中支持向量机的指导原则。对于表1中没有列出的参数，本文使用了WEKA默认值。</p><p><img src= "/img/loading.gif" data-lazy-src="/image/pages/t001.png" alt="表1. MLAs configurations"></p><h3 id="sliding-window"><a href="#sliding-window" class="headerlink" title="sliding window"></a>sliding window</h3><p>原始传感器数据基本上由三轴值和一个纳秒时间戳组成，表示采样的瞬间/时间。但是，我们不向分类器发送原始传感器数据。取而代之的是，我们将传感器的时间序列样本以一秒的帧进行分组，组成一个滑动时间窗口，然后总结出一个属性向量。随着时间的推移，窗口在时间序列上以1帧的增量滑动，如图3所示。我们认为$f_0$是当前第二帧的帧，$f_{−1}$是前一帧的帧，以此类推，$f_{−(nf−1)}$，其中$nf$(评价集的第五个元素)是构成滑动时间窗口的帧数。本文在这个评估中使用了以下<span class="inline-tag red"><strong>$nf$值:4、5、6、7和8</strong></span>。<br>这些值是通过实验定义的，以便滑动窗口能够根据事件的激烈程度，调整收集到的2到7秒的驾驶事件的长度。</p><p>本文评估了几个评估程序集的性能，以找出最适合检测每种驾驶事件类型的程序集。装配数是15个数据集、5个不同的nf值、4个BN算法配置(表1)、5个MLP配置、6个RF配置和36个SVM配置的所有组合的结果。</p><p>这个结果总共<span class="inline-tag red">$15 \ast 5 \ast 4 + 15\ast5\ast5 + 15\ast5\ast6 + 15\ast5\ast36 = 3825$</span>个评估程序集</p><h2 id="Attribute-vector"><a href="#Attribute-vector" class="headerlink" title="Attribute vector"></a>Attribute vector</h2><p>属性向量是滑动窗口的汇总。每个包含驾驶员事件的时间窗口都会生成属性向量的一个实例。相应地，如果在特定时间窗口中没有驾驶员事件，则不会生成属性向量实例。</p><p><img src= "/img/loading.gif" data-lazy-src="/image/pages/g003.png" alt="图3. 滑动窗口"></p><p>本文通过计算构成时间窗口的帧内传感器数据样本上的均值(M)、中值(MD)、标准差(SD)和增加/减少趋势(T)来创建属性向量的实例。向量中属性的数量依赖于滑动窗口(nf)中的帧数量。有$nf$个平均值，中值，标准偏差属性和$nf - 1$个趋势属性。</p><p>图4描述了传感器数据的单个轴的属性向量的结构。当数据集由多个轴组成时，每个轴的属性向量被简单地连接起来，并且只保留最后一个向量的class label属性，因为它们都具有相同的值。</p><p><img src= "/img/loading.gif" data-lazy-src="/image/pages/g004.png" alt="图4. 汇总一个nf帧的滑动时间窗口的属性向量,i=nf-1"></p><p>向量的属性计算如下:<br>$$M_0 = M(f_0) \quad  … \quad  M_i = M(f_{-i},f_0) \tag{1}$$</p><p>$$MD_0 = MD(f_0) \quad  … \quad  MD_i = MD(f_{-i},f_0) \tag{2}$$</p><p>$$SD_0 = SD(f_0) \quad  … \quad  SD_i = SD(f_{-i},f_0) \tag{3}$$</p><p>$$T_1 = \frac {M(f_{-1})}{M(f_0)} \quad … \qquad T_i = \frac {M(f_{-i})}{M(f_0)} \tag{4}$$</p><p>其中</p><ul><li>$i = [0..(nf-1)]$</li><li>$SF(f_i)$ 是应用于第$j^{th}$帧样本的一个汇总函数$\text{(mean, median, or standard deviation)}$</li><li>$SF(f_j,f_k)$ 是应用于样本从第$j$个帧到第$k$个帧的汇总函数($j&lt;k$)</li></ul><p>向量的class label attribute 来自于 驾驶事件的ground-truth<br>类标签class label是driving event，它的开始时间戳在帧$f_{-(nf-1)}$中样本的第一个时间戳和帧$f_0$中样本的最后一个时间戳之间。需要指出的是，由于不同驾驶出行产生的属性向量是时间独立的，因此可以将它们分组在同一个数据集中。</p><p>单个驾驶事件原始传感器数据示例生成$nf$个属性向量实例。这是因为包含事件的开始时间戳的窗口框架在其滑动时改变了其在窗口中的位置。因此，如果有一个特定驾驶员事件类型的$s$个样本，那么该事件类型将有$s*nf$个属性向量实例。此行为允许多个窗口捕获同一事件的不同部分或签名。</p><h2 id="Data-collection-in-a-real-world-experiment"><a href="#Data-collection-in-a-real-world-experiment" class="headerlink" title="Data collection in a real-world experiment"></a>Data collection in a real-world experiment</h2><p>为了收集驾驶事件的传感器数据，本文进行了一个真实的实验。在这个实验中，一个Android应用程序在驾驶员执行特定驾驶事件时记录智能手机传感器数据。本文还记录了驾驶员事件的开始和结束时间戳，以生成实验的ground-truth。<br>本文进行了4次汽车出行的实验，每次平均约13分钟。<br>实验条件如下：</p><ol><li>the vehicle was a 2011 Honda Civic(这辆车是2011年的本田思域(Honda Civic))</li><li>the smartphone was a Motorola XT1058 with Android version 5.1(这款智能手机是摩托罗拉XT1058, Android版本为5.1)</li><li>the smartphone was fixed on the car’s windshield by means of a car mount, and was neither moved nor operated while collecting sensor data(智能手机通过汽车支架固定在汽车的挡风玻璃上，在收集传感器数据时既不移动也不操作)</li><li>the motion sensors sampling rate varied between 50 and 100 Hz, depending on the sensor(运动传感器的采样率根据传感器的不同在50到100赫兹之间变化)</li><li>two drivers with more than 15 years of driving experience executed the driving events(由两名具有15年以上驾驶经验的驾驶员执行驾驶事件)</li><li>the weather was sunny and the roads were dry and paved with asphalt. (天气晴朗，道路干燥，铺着柏油)</li></ol><p>本实验收集的驾驶事件类型以[13]中的事件为基础。<br>本文的目的是建立一组驾驶事件，这些事件代表了现实世界中常见的事件，如刹车、加速、转弯和变道。表2显示了本工作中使用的<span class="inline-tag red"><strong>7种驾驶事件类型</strong></span>及其收集的样本数量。</p><p><img src= "/img/loading.gif" data-lazy-src="/image/pages/t002.png" alt="表2. 驾驶员事件类型和样本数量"></p><p>图5显示了评估中使用的四个传感器捕获的攻击性左变道事件的传感器数据。</p><p><img src= "/img/loading.gif" data-lazy-src="/image/pages/g005.png" alt="图5. 评估中使用的四个传感器获取主动变道事件数据"></p><h1 id="Results"><a href="#Results" class="headerlink" title="Results"></a>Results</h1><p>本文使用5个不同的nf值，在之前描述的15个数据集上执行表1中描述的4个MLAs及其配置的所有组合。本文用15种不同的随机种子训练、测试和评估每个评估集合。最后，我们计算了这些执行的AUC平均值，并根据驾驶员事件类型对它们进行分组，并在图6所示的箱线图中对5个性能最好的组件进行排序。该图左边显示了驾驶事件，右边显示了每个事件的5个最佳评估程序集，最优的程序集在底部。<br>图6中的组合文本标识按此顺序进行编码：</p><ol><li><span class="inline-tag blue"><strong>the nf value</strong></span></li><li><span class="inline-tag blue"><strong>the sensor and its axis( if there is no axis indication, then all sensor axes are used)</strong></span></li><li><span class="inline-tag blue"><strong>the MLA and its configuration identifier</strong></span> </li></ol><p><img src= "/img/loading.gif" data-lazy-src="/image/pages/g006.png" alt="图6. 前5个最好的AUC程序集，根据驾驶员事件类型分组，作为使用不同的随机种子的15次MLA训练/测试执行的结果"></p><!-- <center><img src= "/img/loading.gif" data-lazy-src="/image/pages/g006.png" width="70%" height="70%" />Figure 6. 前5个最好的AUC程序集，根据驱动事件类型分组，作为15次MLA训练/测试执行的结果，使用不同的随机种子</center> --><p><strong>结果结论</strong></p><ol><li>MLAs在 <strong>较高的nf值</strong>(即较大的滑动窗口大小)下表现更好。在35个性能最好的组件中，有23个 nf = 8,有6个nf = 7,有5个nf = 6，只有1个nf = 4。</li><li><strong>陀螺仪和加速度计</strong>是本实验中最适合检测驾驶事件的传感器。另一方面，磁强计单独不适合事件检测，因为没有35个最好的组件使用该传感器。此外，使用所有的传感器轴比使用单个轴在一般情况下性能更好。唯一的例外是陀螺仪的z轴，它最好的检测侵略性的左转弯。</li><li><strong>RF</strong>是目前为止表现最好的MLA, 35个最好的组装中有28个。第二好的是MLP，有7个最好的结果。RF在非侵略性事件、侵略性转弯、断裂和加速中占据了前5名。然而，MLP更擅长侵略性的变道。BN和SVM在35个表现最好的assemblies中没有排名。</li><li>MLP配置#1的性能最好。在此配置中，隐含层神经元的数量被定义为(#attr. + #classes)/ 2。这也是缺省的WEKA配置。对于RF，配置#6(# of iterations = 200; # of attributes to randomly investigate= 15)和#5(# of iterations = 200; # of attributes to randomly investigate = 10)给出了最好的结果。</li><li>本文在排名前35位的评估程序集中发现了令人满意的和同等的性能。这是因为最坏的AUC平均值(aggressive breaking event为0.980)和最好的AUC平均值( aggressive right lane change event为0.999)之间的差只有0.018。这一差异在本实验背景下不显著。</li></ol><h1 id="Conclusions-and-future-work"><a href="#Conclusions-and-future-work" class="headerlink" title="Conclusions and future work"></a>Conclusions and future work</h1><p>在这项工作中，本文使用从4个Android智能手机传感器(加速度计、线性加速度、磁强计和陀螺仪)收集的数据，对4个MLAs (BN、MLP、RF和SVM)在检测7种驾驶事件类型中不同配置的性能进行了定量评估。本文在一个有2名驾驶员的真实世界实验中收集了69个此类事件类型的样本。<br>记录这些事件的开始和结束时间作为实验的ground-truth。本文还比较了应用不同滑动时间窗大小时的性能。</p><span class="inline-tag grey">$EA = \lbrace 1:sensor, \  2:sensor \ axis(es), \  3:MLA,\  4:MLA \ configuration,\  5:number \ of \ frames \ in \ sliding \ window\  \rbrace$</span><p>使用表单的3865个评估程序集的不同随机种子执行了15次执行</p><p>因此找到了每个驱动事件类型的前5个执行程序集。在实验中，这些结果表明</p><ol><li>滑动窗口尺寸越大表现越好</li><li>陀螺仪和加速计是探测驾驶事件的最佳传感器</li><li>一般来说，使用所有传感器轴比使用单个传感器轴表现更好，除了侵略性的左转事件</li><li>到目前为止，RF是表现最好的MLA，其次是MLP</li><li>前35种组合的性能均令人满意且相当，AUC均值在0.980 ~ 0.999之间变化。</li></ol><p>在未来的工作中，本文希望通过不同的车辆、Android智能手机型号、道路状况、天气和温度来收集更多的驾驶事件样本。本文还希望在评估中增加更多的MLAs，包括基于模糊逻辑和DTW的MLAs。最后，本文打算使用本研究中观察到的最佳评估程序集来开发一个Android智能手机应用程序，该应用程序可以实时检测驾驶事件并计算驾驶员行为概况。</p>]]></content>
      
      
      <categories>
          
          <category> paper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> paper </tag>
            
            <tag> 论文笔记 </tag>
            
            <tag> driving behavior proﬁling </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Various Approaches for Driver and Driving Behavior Monitoring:A Review</title>
      <link href="/posts/100001/"/>
      <url>/posts/100001/</url>
      
        <content type="html"><![CDATA[<p><strong>论文题目</strong>：驾驶员和驾驶行为监控的各种方法:综述</p><h2 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>近年来，驾驶员困倦和注意力分散已经成为大量事故中的重要因素，因为它们降低了驾驶员的感知水平和决策能力，对车辆的控制能力产生了负面影响。减少这类事故的一种方法是通过监测驾驶员和驾驶行为，并在驾驶员昏昏欲睡或分心的状态下提醒驾驶员。此外，如果能够提前预测不安全的驾驶行为，这也将有助于安全驾驶。</p><p>本文将讨论对驾驶员和驾驶行为的各种监测方法以及对不安全驾驶行为的预测。</p><h3 id="驾驶员困倦的监测"><a href="#驾驶员困倦的监测" class="headerlink" title="驾驶员困倦的监测"></a>驾驶员困倦的监测</h3><p>讨论了驾驶员行为的视觉特征和非视觉特征，以及与车辆特征相关的驾驶行为。<br>视觉特征方面： 详细讨论了眼睛的相关测量、哈欠检测、面部表情等视觉特征测量<br>非视觉特征： 探索各种生理信号和利用这些信号可能的睡意检测方法。<br>基于车辆的特征： 描述了方向盘运动和横向位置的标准偏差。</p><h3 id="驾驶员的注意力分散的监测"><a href="#驾驶员的注意力分散的监测" class="headerlink" title="驾驶员的注意力分散的监测"></a>驾驶员的注意力分散的监测</h3><p>描述了头部姿势和注视方向的方法。</p><h3 id="不安全的驾驶行为的预测"><a href="#不安全的驾驶行为的预测" class="headerlink" title="不安全的驾驶行为的预测"></a>不安全的驾驶行为的预测</h3><p>解释了基于面部表情和汽车动力学的预测方法</p><h3 id="主动驾驶安全系统需要解决的几个问题"><a href="#主动驾驶安全系统需要解决的几个问题" class="headerlink" title="主动驾驶安全系统需要解决的几个问题"></a>主动驾驶安全系统需要解决的几个问题</h3><ol><li>检测睡意的混合方法</li><li>安全驾驶的驾驶上下文感知</li><li>需要公共数据集的模拟和真实驾驶条件。</li></ol><h2 id="introduction"><a href="#introduction" class="headerlink" title="introduction"></a>introduction</h2><p><strong>原因</strong><br>司机困倦(<strong>drowsiness</strong>)和注意力分散(<strong>distraction</strong>)是交通事故的主要原因</p><p><strong>解决方法</strong><br>设计一个框架包含两个阶段：<strong>监控和预测驾驶员和驾驶行为</strong></p><h3 id="监测困倦状态"><a href="#监测困倦状态" class="headerlink" title="监测困倦状态"></a>监测困倦状态</h3><p><strong>视觉特征</strong></p><p>驾驶员疲劳或者困倦可能与眼运动(eye movement)、面部表情(facial expression)、心跳和呼吸频率(heart and breathing rate)以及大脑活动(brain activity)的症状相关。<br>为了检测驾驶员的困倦，视觉特征(visual features)比如眼运动和面部表情是非常重要的;<br>打哈欠的测量(yawning measurement)</p><p><strong>非视觉特征</strong></p><p>非视觉特征(non-visual features),间接评估驾驶员的等级可以考虑下面几个方面：</p><ul><li>心率变异率 heart rate variability (HRV)</li><li>皮肤电反应 galvanic skin response (GSR)</li><li>传导性 conductivity</li><li>方向盘控制压力 steering-wheel grip pressure</li><li>体温 body temperature</li><li>Electroencephalogram 脑电图(EEG)和 Electro-oculogram 眼电图(EoG)提供关于困倦或情绪反应[13]的额外的心理生理学信息。</li></ul><p><strong>行为信息</strong></p><p>驾驶行为信息如方向盘运动(steering wheel movement)、车道保持(lane keeping)、加速踏板运动(acceleration pedal movement)、制动(braking)等也应被考虑来检测驾驶员是否困倦。</p><h3 id="监测注意力分散"><a href="#监测注意力分散" class="headerlink" title="监测注意力分散"></a>监测注意力分散</h3><p>视觉分心指的是“眼离路”的状态，而认知分心被描述为“脑离路”的状态。<br>为了检测驾驶员的注意力分散，需要有效地提取驾驶员 <strong>头部姿态或注视信息</strong> 。</p><p>通过仔细监测驾驶员和驾驶表现行为，可以预测 <strong>小事故和大事故(minor and major accidents)</strong></p><ul><li>Jabon et al.[15]在事故发生前的不同时间段里识别了一套驾驶员的关键面部特征，并用它们来预测小事故和大事故。这种方法对于主动驾驶安全系统的设计是非常重要的，以防止事故。</li><li>瑞士EPFL的信号处理实验室[16]通过分析面部表情和肌肉运动来检测驾驶员的分心以及情绪，这些情绪可能表明驾驶员不能胜任手头的工作。</li></ul><p>本文的 <strong>目的</strong>：探讨监控驾驶员的状态以及预测不安全驾驶行为。</p><p>开发一个包括两个阶段的框架的几个问题:监测和预测驾驶员和驾驶行为。</p><h2 id="Driver-drowsiness-measurement"><a href="#Driver-drowsiness-measurement" class="headerlink" title="Driver drowsiness measurement"></a>Driver drowsiness measurement</h2><div class="note primary no-icon"><p>这一节主要是司机困倦状态的监测，从视觉特征和非视觉特征两个角度来讨论驾驶员的行为特征，并且讨论了基于车辆的特征相关的驾驶行为。视觉特征方面，这节详细讨论了与眼睛相关的测量方法，如PERCLOS、呵欠检测以及目前在视觉特征测量中的一些局限性。非视觉特征方面，这节探索用于检测睡意的生理信号。基于车辆的特征，本节描述了方向盘运动和横向位置的标准偏差。 </p></div><p><strong>监测困倦状态的原因</strong></p><p>微睡眠(micro-sleep)的持续时间可以在几秒到30秒甚至更多之间。因此，驾驶员的困倦状态，即从清醒到睡眠的过渡状态，应该被监测。</p><p><img src= "/img/loading.gif" data-lazy-src="/image/pages/002.png" alt="Summary of various features for detecting and predicting driver drowsiness"></p><p>上图是监测司机困倦状态的特征总结。</p><p>驾驶员行为信息包括 <strong>视觉特征</strong>和 <strong>非视觉特征</strong>。</p><p><strong>视觉特征</strong></p><ul><li>闭眼(eye closure)</li><li>眨眼(eye blinking)</li><li>打哈欠(yawning)</li><li>头部姿势(head pose)</li><li>面部表情(facial expression)<br>可以增加的：</li><li>眨眼频率(frequency of eye blinking)：衡量疲劳程度的良好指标</li><li>眼睑张开程度(degree of eyelid opening)：衡量疲劳程度的良好指标</li></ul><p><strong>非视觉特征</strong></p><ul><li>心率(heart rate)</li><li>脉搏率(pulse rate)</li><li>大脑活动(brain activity)。<br>可以增加一些生理信号:</li><li>心电图(electrocardiogram ECG)</li><li>肌电图(electromyogram EMG)</li><li>眼电图(electro-oculogram EoG)</li><li>脑电图(electroencephalogram EEG))</li></ul><p><strong>驾驶行为信息</strong></p><ul><li>车道位置偏差(deviations from lane position)</li><li>车速(vehicle speed)</li><li>转向运动(steering movement)</li><li>加速踏板压力(pressure on the acceleration pedal)等</li></ul><h3 id="Visual-features"><a href="#Visual-features" class="headerlink" title="Visual features"></a>Visual features</h3><div class="note primary no-icon"><p>这一节主要是从视觉特征角度来讨论驾驶员的行为特征，详细讨论了与眼睛相关的测量方法PERCLOS,并介绍了一下目前的打呵欠检测以及目前在视觉特征测量中的一些局限性。</p></div><p>从视觉方面主要是看监测面部动作，面部动作(facial movements)包括下面三个方面：</p><ul><li>眨眼(eye blinking)</li><li>频繁打哈欠(frequent yawning)</li><li>点头或者摆动头(nodding or swinging head)</li></ul><div class="note info no-icon"><p>对于眨眼可以采用PERCLOS方法。</p></div><p><strong>PERCLOS (Percent Eye Closure)</strong></p><ul><li>对司机警觉性水平的可靠和有效的测定</li><li>PERCLOS是驾驶员眼睑闭合时间占瞳孔总时间的80%(或以上)，也反映了眼睑闭合缓慢。？？</li><li>当PERCLOS超过预定的阈值，提出的系统产生瞌睡警告。</li><li>其缺点是，有些情况监测不到：有时试图保持清醒的司机可能睁着眼睛睡着了。</li></ul><p>计算PERCLOS需要提取包括瞳孔面积在内的眼睛区域<br>在提取这些视觉特征方面存在一些限制：合适的照明(proper lighting)</p><p>监测司机是否困倦应该考虑真实情况：</p><ul><li><strong>白天和晚上</strong>：一个简单的CCD或网络相机在白天使用，而红外相机在晚上使用</li><li>司机 <strong>是否戴眼镜</strong>：<ol><li>需要找到合适的近红外(Near IR  NIR)光照波长【一个可能的候选波长是850nm。在真实的汽车环境中，反射的阳光也产生在眼镜的外表面。为了减少反射效果，Jo等[34]使用了带窄带通滤光片的近红外光源，将入射光的波长限制在850nm。这是因为高功率LED照明灯比车内的阳光更强大。】</li><li>用于商业产品如视觉机器[35]的faceLAB。利用被动式摄像机对视频图像进行实时处理，确定各特征的三维位置。该系统能够确定一个精确的3D头部姿态和计算眼睛注视方向。它的优点包括能够很好地应对光线不足的情况，以及司机戴着太阳镜时头部的运动。</li></ol></li></ul><div class="note info no-icon"><p>打哈欠可以通过测量驾驶员口腔轮廓的变化速率和变化量来检测[7,11]。</p></div><div class="note info no-icon"><p>头部姿态估计和头部运动检测(如点头)在监控驾驶员机警性方面也很重要[36,37]</p></div><div class="note info no-icon"><p>此外，司机的面部皱纹出现在眉毛、嘴部和鼻唇沟，这些都是很好的身体信号，表明困倦被抑制了，因此困倦就出现了。</p></div><h3 id="Non-visual-features"><a href="#Non-visual-features" class="headerlink" title="Non-visual features"></a>Non-visual features</h3><div class="note primary no-icon"><p>这一节主要是从非视觉特征角度来讨论驾驶员的行为特征，主要是通过生理信号的检测来识别，并考虑其侵入性特点的局限性。</p></div><p><strong>原因</strong></p><p>非视觉特征或生理信号，如心率和大脑活动，在预测困倦方面是有用的，与视觉特征相比，假阳性更少，因为只有在司机很好地在睡觉的路上，才能从视觉特征判断困倦状态。即基于这些生理信号的困倦预测使我们有可能及时地向困倦的司机发出警告。</p><p><strong>生理信号</strong></p><ul><li>心电图(ECG)<ul><li>从心电图信号中可以提取出心率(HR);心率可以用来检测睡意，因为它在警觉性和睡意状态之间存在显著差异[19,39]。</li><li>心率变异性(HRV)测量每一拍心跳的变化，也可用来检测睡意。随着司机从警觉状态到昏昏欲睡状态，心电图信号中低频与高频的比率逐渐降低[20,40]。</li></ul></li><li>脑电图(EEG)</li><li>肌电图(EMG)</li><li>眼电图(EoG)</li><li>光容积描记(PPG)</li></ul><p><strong>过程</strong></p><ol><li>处理生理信号的一个 <strong>关键问题</strong>是消除真实环境中不可避免的噪声和人为因素。</li><li>在有效滤波之后，采用了快速傅立叶变换(FFT)和离散小波变换(DWT)等特征提取技术。</li><li>然后，利用支持向量机(SVM)、人工神经网络(ANN)、线性判别分析(LDA)等方法对提取出来的特征进行分类[40-43]</li></ol><p><strong>局限性</strong></p><p>优点：检测驾驶员睡意的可靠性和准确性比可见特征高<br>重要局限性：侵入性</p><p><strong>解决方案</strong></p><ul><li>使用无线技术，如Zigbee和Blutooth，通过将电极放置在方向盘或驾驶员座位上，以非侵入性的方式测量生理信号[44,45]。最后，信号由智能手机处理，确定司机瞌睡[46]。然而，由于电极接触不当，这种非侵入式系统与侵入式系统相比精度较低。</li><li>为了获得可靠的驾驶员嗜睡检测结果，人们尝试融合各种测量结果[20,47]。将PERCLOS、ECC和EEG混合用于检测驾驶员嗜睡，其成功率高于单独测量[20]。Cheng等人[47]使用PERCLOS融合、眨眼频率、最大闭合时间和非转向百分比等方法检测睡意。</li></ul><h3 id="Driving-behavior-features"><a href="#Driving-behavior-features" class="headerlink" title="Driving behavior features"></a>Driving behavior features</h3><div class="note primary no-icon"><p>这一节主要是从车辆特征的驾驶行为特征角度，描述了方向盘运动和横向位置的标准偏差</p></div><p>驾驶行为特征或驾驶性能指标包括方向盘运动、车道保持、加速踏板运动和制动等[48-50]。这些特征与车辆类型以及驾驶员在驾驶习惯、驾驶技能和驾驶经验方面的差异性有关。检测驾驶员睡意水平最常用的两种驾驶行为指标是 <strong>方向盘运动和横向位置的标准偏差</strong>。</p><h2 id="Driver-distraction-detection"><a href="#Driver-distraction-detection" class="headerlink" title="Driver distraction detection"></a>Driver distraction detection</h2><div class="note primary no-icon"><p>这一节 描述了一些与驾驶员分心测量相关的问题，特别是头部姿势和注视方向方法。</p></div><p>暂无</p><h2 id="Predicting-unsafe-driving-behavior"><a href="#Predicting-unsafe-driving-behavior" class="headerlink" title="Predicting unsafe driving behavior"></a>Predicting unsafe driving behavior</h2><div class="note primary no-icon"><p>这一节介绍了不安全驾驶行为的预测方法并解释了基于面部表情和汽车动力学的预测方法。</p></div><p>对驾驶员状态、驾驶行为性能和车辆状态的监测对于提高驾驶员主动安全系统的性能是非常重要的。</p><p>驾驶员的状态通过测量困倦、疲劳或压力水平来监测[61-64]。通过分析驾驶速度、方向盘角度、制动和加速等信息，还可以监测驾驶行为、性能和车辆状态[48- 50,65,66]。在检测到困倦或注意力分散后，就会向司机发送警报。</p><p>主动驾驶员安全系统的另一个 <strong>重要问题</strong>是开发一种机制来 <strong>提前预测小事故和大事故</strong>。</p><p><strong>基于面部表情和汽车动力学的预测方法</strong><br>Jabon等人[15]使用面部特征来帮助预测驾驶员事故。他们结合了车辆动力学和驾驶员面部分析来预测事故。</p><p><strong>过程</strong></p><ol><li>首先，对22个原始面部特征进行综合分析。</li><li>然后从一组时域和频域的数值中提取出对事故预测最有价值的统计量，从而实现对重大和轻微事故的预测。</li></ol><p><strong>结果</strong><br>虽然Jabon et al.[15]的实验结果并不是基于真实的道路情况，但已经发现面部特征在事故发生前4秒表现出最准确的预测能力，并且在预测小事故时比预测大事故更有帮助。这是因为对重大事故的预测精度主要来自车辆的特征，而不是面部特征。</p><p><strong>新技术</strong><br>EPFL and PSA Peugeot Citroen[16]正在开发一种技术，以检测司机的分心以及情绪，表明司机不能胜任手头的任务。即，面部表情和肌肉运动在分析司机是否太过分散注意力、太累或甚至太过愤怒而无法安全控制车辆时非常重要。</p><p><strong>局限性</strong><br>虽然面部特征已被证明有助于预测小事故，但其预测效果还有待提高。</p><p>为了更准确地预测事故，有必要捕捉来自驾驶员或驾驶员环境系统其他部分的其他生理信号。在此基础上，可以提出一种新的交通事故预测模型。特别是在构建更广泛、更通用的事故预测模型时，需要考虑不同的参与者群体、交通文化和驾驶环境。</p><h2 id="Discussion"><a href="#Discussion" class="headerlink" title="Discussion"></a>Discussion</h2><div class="note primary no-icon"><p>这一节讨论了主动驾驶员安全系统的一些问题：<br>1)检测睡意的混合方法<br>2)安全驾驶的驾驶上下文感知<br>3)需要用来模拟的公共数据集以及真实驾驶条件</p></div><h3 id="Hybrid-measures-for-drowsiness-detection"><a href="#Hybrid-measures-for-drowsiness-detection" class="headerlink" title="Hybrid measures for drowsiness detection"></a>Hybrid measures for drowsiness detection</h3><div class="note primary no-icon"><p>检测睡意的混合方法</p></div><p><strong>目前监测司机睡意的存在的问题</strong></p><ol><li>在驾驶行为和驾驶员行为特征中，驾驶行为有时不能可靠地检测驾驶员的嗜睡。</li><li>驾驶员行为特征优于驾驶行为特征，但视觉特征有时会受到光照条件和驾驶员姿态[34]的限制。</li><li>非视觉特征，如生理特征是可靠和准确的，但其本质是侵入性的。在它们能够在真实的车辆环境中使用之前，应该解决侵入性这个问题。虽然已经开发了一种侵入性较小的ECG测量方法[45]，但EEG和EoG仍然需要以侵入性的方式将电极放置在头皮或眼睛区域。然而，非侵入性的生理信号测量可能在不久的将来发展。</li></ol><p><strong>混合方法</strong></p><p>融合 <strong>视觉</strong>、<strong>生理</strong>和 <strong>驾驶行为特征</strong>的混合测量</p><p>即使在某些传感器失效的情况下，融合方法也能很好地检测出睡意。图4显示了一个用于驱动状态检测的混合测量示例。其中一个问题是在特征级或决策级[20]上开发一种可靠的数据融合方法。</p><p><img src= "/img/loading.gif" data-lazy-src="/image/pages/003.png" alt="用于检测驱动程序状态的混合测量"></p><h3 id="Driving-context-awareness-for-safe-driving"><a href="#Driving-context-awareness-for-safe-driving" class="headerlink" title="Driving context-awareness for safe driving"></a>Driving context-awareness for safe driving</h3><div class="note primary no-icon"><p>安全驾驶的驾驶上下文感知</p></div><p>为了安全驾驶，驾驶上下文感知是必要的，需要有效地探索与驾驶条件和环境相关的各种信息。</p><p>将驾驶上下文划分为全局和局部。</p><ol><li><strong>全局</strong>驾驶上下文是指车辆类型、道路类型、驾驶时间、驾驶环境、路况等等</li><li><strong>局部</strong>(local)驱动上下文指的是驾驶员状态(driver status)。即局部语境与驾驶员的视觉和认知知觉以及驾驶员因分心、嗜睡和/或情绪而导致的视觉和认知知觉的恶化有关。</li></ol><p>发展方向：结合 <strong>驾驶环境</strong>和 <strong>驾驶员状态</strong>的基于驾驶上下文的计算模型。使用这样的模型，注意力分散和嗜睡的检出率将会增加，这将有助于预测不安全驾驶行为。</p><h3 id="Necessity-for-public-data-sets-for-simulation-and-real-driving-conditions"><a href="#Necessity-for-public-data-sets-for-simulation-and-real-driving-conditions" class="headerlink" title="Necessity for public data sets for simulation and real driving conditions"></a>Necessity for public data sets for simulation and real driving conditions</h3><div class="note primary no-icon"><p>需要用来模拟的公共数据集以及真实驾驶条件</p></div><p>在真实的驾驶环境中测试困倦有危险。</p><p><strong>真实驾驶条件的必要性</strong><br>Philp等人[67]发现，由于体验的单调性，在模拟环境中，来自自我评价的反应时间和嗜睡程度比在真实驾驶环境中要高。<br>Engstorm等[68]指出，真实驾驶条件下的生理负荷和转向活性均高于模拟环境。在真实的驾驶条件下，包括灯光和噪音的变化在内的各种因素也会影响驾驶员的注意力。</p><p><strong>没有可用的基准数据集</strong></p><h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>这篇文章回顾了各种可用的方法来确定困倦和分心的司机的状态。通过对驾驶员视觉特征、非视觉特征和驾驶行为行为等驾驶员行为的研究来检测驾驶员困倦。</p><ol><li>PERCLOS、闭眼时间(ECD)、闭眼频率(FEC)是一种基于视觉特征的检测驾驶员睡意的系统。<br>其中，PERCLOS在检测睡意方面表现良好，但存在光照条件等局限性。为了克服这个问题，使用了850nm的IR光源。</li><li>生理信号如ECG、EEG、EoG和PPG信号作为非视觉特征检测驾驶员困倦。尽管生理信号比视觉特征表现出更好的表现，但它们也有一些局限性，尤其是它们的侵入性。为了克服这个问题，应该开发侵入性较小的传感器。目前，ECG信号可以用一种较少干扰的方式捕获。驾驶性能行为如方向盘运动和侧位标准偏差也被用来检测困倦。</li><li>驾驶员注意力分散是通过头部姿势和注视方向来检测的。驾驶员的分心可能会导致更大的车道变化，更慢的对障碍的反应，以及更突然的转向控制。因此，为了开发一个更安全的驾驶员监控系统，我们应该监控驾驶员的分心。</li><li>对于主动驾驶安全系统而言，预测不安全驾驶行为是一种可取的方法。本文解释了基于面部表情和汽车动力学的预测方法。通过面部表情检测驾驶员的情绪，有助于预测驾驶员的驾驶行为。</li><li>最后本文讨论了主动驾驶安全系统未来发展中需要解决的几个问题。它们是a)检测睡意的混合措施，b)安全驾驶的驾驶环境感知，c)模拟和真实驾驶条件的公共数据集的可用性。</li></ol>]]></content>
      
      
      <categories>
          
          <category> paper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> paper </tag>
            
            <tag> 论文笔记 </tag>
            
            <tag> driving behavior proﬁling </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dataset</title>
      <link href="/posts/60504/"/>
      <url>/posts/60504/</url>
      
        <content type="html"><![CDATA[<h2 id="公开的数据集"><a href="#公开的数据集" class="headerlink" title="公开的数据集"></a>公开的数据集</h2><h3 id="SHRP2"><a href="#SHRP2" class="headerlink" title="SHRP2"></a>SHRP2</h3><h4 id="数据集获取方式"><a href="#数据集获取方式" class="headerlink" title="数据集获取方式"></a>数据集获取方式</h4><p><a href="https://insight.shrp2nds.us/" target="_blank" rel="noopener">https://insight.shrp2nds.us/</a></p><h3 id="Security-dataset"><a href="#Security-dataset" class="headerlink" title="Security dataset"></a>Security dataset</h3><h4 id="数据集获取方式-1"><a href="#数据集获取方式-1" class="headerlink" title="数据集获取方式"></a>数据集获取方式</h4><p><a href="https://ocslab.hksecurity.net/Datasets/driving-dataset" target="_blank" rel="noopener">https://ocslab.hksecurity.net/Datasets/driving-dataset</a></p><h4 id="数据集的描述"><a href="#数据集的描述" class="headerlink" title="数据集的描述"></a>数据集的描述</h4><ul><li><p>Driving time : about 23 hours</p></li><li><p>Driving length : about 46km (round-trip)</p></li><li><p>Driving path : between Korea University and SANGAM World Cup Stadium</p></li><li><p>#of Driver : 10 (A to J classes in the dataset and our paper.) </p></li><li><p>数据收集是在韩国进行的，使用的是起亚汽车公司的一款最新车型。</p></li><li><p>实验设置由城市道路、高速公路和停车位三种类型的四条道路组成，总长度为23公里。</p></li><li><p>城市道路有信号灯和人行横道，而高速公路没有。在停车位上，司机开车要慢，要小心。</p></li><li><p>试验于2015年7月28日开始。时间因素是通过在类似的时区(工作日晚上8点到11点)进行实验来控制的。</p></li><li><p>司机完成了两个来回为一个可靠的分类。每个司机的驾驶数据从A到j。每秒总共捕获94,401条记录，从而生成16.7 MB的数据集。</p></li><li><p>数据通过车载诊断2 (OBD-II)和CarbigsP (OBD-II扫描仪）从车辆的CAN总线上收集。使用的车辆有许多测量传感器和控制传感器，由电子控制单元(ECU)管理。</p></li></ul><h3 id="UAH‑DriveSet"><a href="#UAH‑DriveSet" class="headerlink" title="UAH‑DriveSet"></a>UAH‑DriveSet</h3><h4 id="数据集获取方式-2"><a href="#数据集获取方式-2" class="headerlink" title="数据集获取方式"></a>数据集获取方式</h4><p><a href="http://www.robesafe.uah.es/personal/eduardo.romera/uah-driveset/" target="_blank" rel="noopener">http://www.robesafe.uah.es/personal/eduardo.romera/uah-driveset/</a></p><h4 id="数据集可视化"><a href="#数据集可视化" class="headerlink" title="数据集可视化"></a>数据集可视化</h4><p><a href="https://github.com/Eromera/uah_driveset_reader" target="_blank" rel="noopener">https://github.com/Eromera/uah_driveset_reader</a></p><h4 id="数据集描述"><a href="#数据集描述" class="headerlink" title="数据集描述"></a>数据集描述</h4><ul><li>UAH-DriveSet是由驾驶监控应用DriveSafe在不同环境下的不同测试人员捕获的数据的公共集合。</li><li>数据集由6名不同年龄和车辆的驾驶员收集，其中包括一辆全电动汽车。(具体见下图)</li><li>3个行为(正常,昏昏欲睡和侵略性)进行了在两个不同的路线(高速公路和二级公路)<ul><li>25公里(往返)高速公路的道路通常3车道在每个方向和最大允许速度120公里/小时,</li><li>16公里左右的二级公路,通常一个车道在每个方向和最大允许速度约为90公里/小时。</li></ul></li><li>超过500分钟的自然驾驶相关的原始数据和额外的语义信息,一起旅行的录像。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="/image/pages/001.png" alt="司机和车的列表信息"></p><h4 id="数据集的引用"><a href="#数据集的引用" class="headerlink" title="数据集的引用"></a>数据集的引用</h4><blockquote><p>E. Romera, L.M. Bergasa and R. Arroyo, “Need Data for Driving Behavior Analysis? Presenting the Public UAH-DriveSet”, IEEE International Conference on Intelligent Transportation Systems (ITSC), pp. 387-392, Rio de Janeiro (Brazil), November 2016. <a href="http://www.robesafe.uah.es/personal/eduardo.romera/pdfs/Romera16itsc.pdf" target="_blank" rel="noopener">pdf</a></p></blockquote><h3 id="HciLab-dataset"><a href="#HciLab-dataset" class="headerlink" title="HciLab dataset"></a>HciLab dataset</h3><h4 id="数据集获取方式-3"><a href="#数据集获取方式-3" class="headerlink" title="数据集获取方式"></a>数据集获取方式</h4><p><a href="https://www.hcilab.org/research/hcilab-driving-dataset/." target="_blank" rel="noopener">https://www.hcilab.org/research/hcilab-driving-dataset/.</a></p><h4 id="数据集描述-1"><a href="#数据集描述-1" class="headerlink" title="数据集描述"></a>数据集描述</h4><ul><li>来源自德国斯图加特大学可视化和交互系统研究所hciLab集团</li><li>数据中包含了10名参与者，压缩包数据共37.9MB的大小</li></ul><h4 id="数据集的引用-1"><a href="#数据集的引用-1" class="headerlink" title="数据集的引用"></a>数据集的引用</h4><blockquote><p>Stefan Schneegass, Bastian Pfleging, Nora Broy, Albrecht Schmidt, and Frederik Heinrich. 2013. A data set of real world driving to assess driver workload. In Proceedings of the 5th International Conference on Automotive User Interfaces and Interactive Vehicular Applications (AutomotiveUI ’13). ACM, New York, NY, USA, 150-157. DOI=10.1145/2516540.2516561 <a href="http://doi.acm.org/10.1145/2516540.2516561" target="_blank" rel="noopener">http://doi.acm.org/10.1145/2516540.2516561</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> dataset </category>
          
      </categories>
      
      
        <tags>
            
            <tag> driving behavior proﬁling </tag>
            
            <tag> dataset </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>论文调研</title>
      <link href="/posts/%E8%AE%BA%E6%96%87%E8%B0%83%E7%A0%94/"/>
      <url>/posts/%E8%AE%BA%E6%96%87%E8%B0%83%E7%A0%94/</url>
      
        <content type="html"><![CDATA[<h1 id="summary"><a href="#summary" class="headerlink" title="summary"></a>summary</h1><p>总共9篇论文</p><ol><li><a href="#data-driven-robust-scoring-approach-for-driver-proﬁling-applications">Data-driven Robust Scoring Approach for Driver Proﬁling Applications</a></li><li><a href="">Driver Behavior Detection Techniques: A survey</a></li><li><a href="">Driver behavior profiling: An investigation with different smartphone sensors and machine learning</a></li><li><a href="">Driver Behavior Profiling Using Smartphones:  A Low-Cost Platform  for Driver Monitoring</a></li><li><a href="#driver-behaviour-proﬁles-for-road-safety-analysis">Driver behaviour proﬁles for road safety analysis</a></li><li>[Investigations on Driver Unique Identification from Smartphone’s GPS Data Alone](#Investigations on Driver Unique Identification from Smartphone’s GPS Data Alone)</li><li><a href="">Know Your Master: Driver Proﬁling-based Anti-theft Method</a></li><li><a href="">Various Approaches for Driver and Driving Behavior Monitoring: A Review</a></li><li><a href="">Who is behind the wheel? Driver identification and fingerprinting</a></li></ol><p>其中涉及的所有公开数据集的下载地址以及详细描述点击<a href="/posts/60504/" title="dataset">dataset</a><br>其中2、3(大概算是)、5、8是综述类文章；6、7、9涉及驾驶员识别</p><h1 id="Data-driven-Robust-Scoring-Approach-for-Driver-Proﬁling-Applications"><a href="#Data-driven-Robust-Scoring-Approach-for-Driver-Proﬁling-Applications" class="headerlink" title="Data-driven Robust Scoring Approach for Driver Proﬁling Applications"></a>Data-driven Robust Scoring Approach for Driver Proﬁling Applications</h1><p>驾驶分析行为：driving behavior proﬁling<br>驾驶员分析过程由两个子过程组成：</p><ol><li>第一种是通过从车载设备(如智能手机和OBDII装置)获取数据来检测某些驾驶行为</li><li>第二种是通过对检测到的行为进行评分的过程来衡量实际的驾驶风险。</li></ol><p><strong>本文的解决方法</strong></p><ul><li>本文提出了一种数据驱动的方法来计算司机的风险分数</li><li>利用SHRP2自然驾驶数据集，这是迄今为止最大的此类数据集。</li><li>训练了两种机器获取算法，即支持向量回归(SVR)和决策树回归(DTR)来反映驾驶员的分数。</li><li>驾驶员的分数是根据预测风险概率的加法逆元来量化的。</li><li>经过数据滤波和预处理，使用代表12种独特驾驶行为和每个驾驶员总驾驶时间的13个预测因子对模型进行训练。验证结果表明，该模型可以准确地预测风险概率。</li></ul><p><del>通常会根据收集到的数据计算每次出行的不同的系数Figures of Merit(FOMs)。</del><br><del>保险公司用来评估风险评分用四种驾驶行为FOMs:制动，超速，加速和转弯行为。</del><br><del>为每个FOM分配不同的权重</del></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>SHRP2自然驾驶研究(NDS)数据集提供了近9000个记录的撞车和接近撞车事件和超过20000个平衡基线事件(即，正常驾驶事件与每个司机的驾驶总数成比例)的大量驾驶上下文数据[5]。</p><p>收集到的数据可以研究危险事件中行为因素的发生率，还包括他们在正常驾驶期间的发生率</p><h2 id="本文的贡献："><a href="#本文的贡献：" class="headerlink" title="本文的贡献："></a>本文的贡献：</h2><ol><li>它提供了一个可靠的数据驱动框架，利用基线、碰撞和接近碰撞事件期间的行为背景信息来预测驾驶员的风险概率。为了实现这一点，12个行为风险预测因子被识别，特征矩阵被制定。驾驶分数用预测风险概率的加性逆表示。</li><li>采用支持向量回归(SVR)和决策树回归(DTR)两种机器学习算法来反映驾驶员的预测风险概率。通过不同的测试样本，比较了两种算法的平均性能和性能一致性。该算法的训练和测试使用了前所未有的数据量，超过2000名司机。</li><li>一个重要的发现是，在适当的采样时间内，只需捕捉少量的事件，就可以准确地预测驾驶风险(平衡的基线事件)。因此，不需要连续采集驾驶数据来确定某一驾驶员的相关风险。这有助于最小化将驾驶数据分流到云服务器所消耗的能量，并最小化预测驾驶风险的计算成本。</li></ol><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><ol><li>本文提出了一种基于数据驱动的健壮的用于驾驶员分析应用程序的风险评分的计算框架。<br>采用预测风险概率表示驾驶员的风险评分</li><li>利用来自SHRP2数据集的2000多名驾驶员的行为驾驶上下文信息和总曝光时间，设计并比较了两种风险预测模型。</li><li>采用一般的分裂法和10倍交叉验证法两种模型训练方法，结果表明，这些模型能够准确地预测风险概率。</li><li>一个重要的发现是，只需在适当的采样时间内捕获少数事件，就可以准确地预测某个司机的驾驶风险。</li><li>SVR模型似乎在所有性能度量上都优于DTR；对于不同的训练/测试样本，DTR的一致性优于SVR</li></ol><p>驾驶员行为分析的两大流派：</p><ol><li>驾驶员行为检测和分类。这包括检测某些事件，如:攻击性加速，攻击性变道等等。</li><li>开发一个评分函数，准确地反映已知的行为[3]，[10]的风险率。</li></ol><p>1多2少，因为评分函数的选择往往是比较主观的。缺乏大规模和可靠的数据集。</p><h2 id="数据集："><a href="#数据集：" class="headerlink" title="数据集："></a>数据集：</h2><p><a href="https://insight.shrp2nds.us/" target="_blank" rel="noopener">SHRP2 NDS Dataset</a></p><p>naturalistic driving (ND) data:自然驾驶数据</p><p>三个重要的优点：</p><ol><li>关于司机在撞车或接近撞车事件前行为的详细信息。</li><li>曝光信息，提供了在正常驾驶事件中不同驾驶行为发生频率的重要信息。</li><li>为进行统计上合理的研究铺平道路的收集数据的数量。</li></ol><h3 id="数据集描述："><a href="#数据集描述：" class="headerlink" title="数据集描述："></a>数据集描述：</h3><p>[SHRP2NDS]<a href="https://insight.shrp2nds.us/" target="_blank" rel="noopener">https://insight.shrp2nds.us/</a></p><p>在SHRP2NDS中，3542名驾驶员在美国6个不同的地点被招募，他们的车辆装备了不显眼的数据采集系统(DASs)，主要包括前向雷达传感器、摄像机、OBD单元来获取车辆的CAN总线信息和全球定位系统(GPS)。这是迄今为止有记录的最大数量的自然驾驶数据。数据还原人员随后能够提取出近9000个由崩溃和接近崩溃组成的风险事件。</p><p>此外，在超过20,000次的正常驾驶事件中随机捕获，为驾驶员提供暴露信息。<br>这些事件被称为平衡基线事件，因为它们的数量与驾驶员的总驾驶时间成正比。<br>VTTI数据分析人员在记录事件期间一共识别了59种驾驶上下文行为属性。<br>这些事件的每种类型的操作定义可以在[5]中找到，具体如下:</p><ol><li>Crash：sd与移动或固定物体(车辆、行人、骑自行车的人、动物等)的任何接触。还包括意外偏离道路。</li><li>Near crash: 任何需要规避动作以避免碰撞的驾驶冲突。</li><li>Balanced baseline events: 选择提供曝光信息的数据次数。它们的长度是21秒，它们的数量与每个司机的总驾驶时间成比例。</li></ol><p>VTTI数据分析人员利用收集到的数据提取并记录了事故发生前/接近事故发生前或基线事件期间的主要驾驶行为。</p><h1 id="Driver-Behavior-Detection-Techniques-A-survey"><a href="#Driver-Behavior-Detection-Techniques-A-survey" class="headerlink" title="Driver Behavior Detection Techniques: A survey"></a>Driver Behavior Detection Techniques: A survey</h1><div class="note danger"><p>综述类文章，后续需要详细看一下，下面还未总结</p></div><p>影响驾驶员行为的因素有疲劳、分心、经验、环境条件、车辆状况等。</p><p><strong>driving style：驾驶风格</strong></p><p>本文讨论了几种被提出的检测驾驶员行为的方法，并确定每种方法的优缺点。</p><p>本文将回顾近年来基于不同参数的驾驶员行为检测方法的研究，以确定适合的驾驶员行为检测方法。<br>用于驾驶员行为检测系统的不同技术，如高级驾驶员辅助系统(ADAS)、模拟器、远程安装摄像头等。</p><p><del>驾驶监控系统技术</del><br><del>驾驶员行为的分类是一个复杂的问题，因为它是一个多维的问题，并且受到驾驶员和交通状态[9]的几个特性的影响。交通状态由一组变量推导，如道路条件、车辆运动学和驾驶员行为[51]。</del><br><del>驾驶风格的评价和识别需要考虑不同的因素，如环境因素、道路状态和车辆[11]、事件分类和识别[12]以及生物生理状态[10]。</del></p><p>In-Vehicle Data Recording Systems 车载数据记录系统<br>Smartphone-based sensing in vehicles 基于智能手机的汽车传感系统<br>real time systems 实时系统</p><p>行为检测方法<br>在[40]中，他们在车上安装了CAN总线来采集数据。采用统计方法:隐马尔可夫模型(HMM)和高斯混合模型(GMM)进行检测。基于一个参数(速度)，他们使用Matlab分析数据，比较不同事件的速度，如变道、超速、停车和稳定驾驶，所有分心和自然驾驶。他们发现HMM比GMM得到的结果更准确。此外，他们还发现，在诸如超车等危险事件中分心驾驶会降低车速。然而，他们在所有事件中都有很高的误报概率。在[41]中，基于CAN-BUS，他们从真实驾驶旅行中收集了不同的数据，他们使用统计方法来检测驾驶行为，如在不可控条件下的均值、中位数和标准差。</p><p>神经网络的优缺点<br>缺点：</p><ol><li>很难分析，因为它们编码的信息不容易解释。</li><li>大多数神经网络不能处理数据点的时间序列，而只能一次计算一个数据向量的输出。在驾驶员行为建模领域，特别是对驾驶动作的预测，数据通常是由不同阶段的序列组成，包含这些时间信息是必不可少的。</li></ol><p>Fuzzy logic</p><p>有其自身的缺点，如信号丢失、需要大内存和长时间处理</p><p>在驾驶监控系统中，传感器通常是关键因素。为了检测驾驶员行为，我们需要自动收集驾驶数据，并应用计算机算法和模型来生成描述驾驶员性能配置文件的分类。在这篇综述中，我们将驾驶行为检测系统一般分为两类车载传感器系统和实时系统。几种技术已被用于检测和识别驾驶员的行为。每种技术都有其优点和缺点。非实时系统技术对驾驶员的训练和反馈非常重要，但不能很好地提高驾驶员的驾驶意识。另一方面，真实的司机监控系统需要多个硬件设备，处理时间长，存储容量大。然而，这些系统有其自身的缺点，如信号丢失、需要大内存和长时间处理。智能手机的发展，可用性和廉价的成本帮助增强和改进驾驶员行为监控系统，克服了以前系统面临的所有障碍。我们可以看到，基于分类问题提出了大量的研究来检测驾驶员的几种行为，并且统计方法给出了一个良好和准确的结果，它为检测问题提供了有价值的见解。此外，我们发现检测系统没有固定的参数，它基于每个系统的目标以及用于收集数据的工具的类型。</p><h1 id="Driver-behavior-profiling-An-investigation-with-different-smartphone-sensors-and-machine-learning"><a href="#Driver-behavior-profiling-An-investigation-with-different-smartphone-sensors-and-machine-learning" class="headerlink" title="Driver behavior profiling: An investigation with different smartphone sensors and machine learning"></a>Driver behavior profiling: An investigation with different smartphone sensors and machine learning</h1><p>驾驶员的行为影响交通安全、燃料/能源消耗和气体排放。司机行为分析试图理解和积极影响司机的行为。通常驾驶员行为分析任务包括驾驶数据的自动收集和计算机模型的应用，以产生一个分类，特征的驾驶员攻击性剖面。虽然采用了不同的传感器和分类方法，但低成本和高性能的解决方案仍是研究的目标。本文对不同的Android智能手机传感器和分类算法进行了研究，以评估哪一种传感器/方法的装配能够使分类具有更高的性能。结果表明，特定的传感器组合和智能方法可以提高分类性能。</p><p><strong>数据集描述</strong></p><ul><li>使用从4个Android智能手机传感器(加速度计、线性加速度、磁强计和陀螺仪)收集的数据，对4个MLAs (BN、MLP、RF和SVM)在检测7种驾驶事件类型中不同配置的性能进行了定量评估。</li><li>在一个有2名驾驶员的真实世界实验中收集了69个此类事件类型的样本。</li></ul><p><strong>实验结果</strong></p><ol><li>滑动窗口尺寸越大表现越好</li><li>陀螺仪和加速计是探测驾驶事件的最佳传感器</li><li>一般来说，使用所有传感器轴比使用单个传感器轴表现更好，除了侵略性的左转事件</li><li>到目前为止，RF是表现最好的MLA，其次是MLP</li><li>前35种组合的性能均令人满意且相当，AUC均值在0.980 ~ 0.999之间变化。</li></ol><p>在未来的工作中，本文希望通过不同的车辆、Android智能手机型号、道路状况、天气和温度来收集更多的驾驶事件样本。本文还希望在评估中增加更多的MLAs，包括基于模糊逻辑和DTW的MLAs。最后，本文打算使用本研究中观察到的最佳评估程序集来开发一个Android智能手机应用程序，该应用程序可以实时检测驾驶事件并计算驾驶员行为概况。</p><h1 id="Driver-Behavior-Profiling-Using-Smartphones-A-Low-Cost-Platform-for-Driver-Monitoring"><a href="#Driver-Behavior-Profiling-Using-Smartphones-A-Low-Cost-Platform-for-Driver-Monitoring" class="headerlink" title="Driver Behavior Profiling Using Smartphones:  A Low-Cost Platform  for Driver Monitoring"></a>Driver Behavior Profiling Using Smartphones:  A Low-Cost Platform  for Driver Monitoring</h1><p><strong>论文题目</strong>：使用智能手机的司机行为分析:一个低成本的司机监控平台</p><p>本文描述了 <strong>SenseFleet</strong>，一个新的移动设备和车辆独立的司机分析和评分应用程序。<br>一个模糊系统被用来计算不同司机的分数使用实时上下文信息，如路线拓扑或天气条件。</p><ul><li>SenseFleet通过融合运动传感器和GPS数据，能够检测加速、刹车、转向和超速事件。</li><li>为了对多个设备和车辆执行事件检测，本文使用了一个校准阶段，该阶段允许调整事件检测算法的模糊集限制。特别是对于超速事件，本文用web服务来获取道路上不同道路的速度限制。</li><li>与现有的解决方案相比，本文提出了一种计分算法，它不仅依赖于事件的数量，而且还考虑上下文信息，如当前的天气条件和时间。</li><li>为了验证平台，本文在不同的条件下使用了该应用程序(即，不同的驾驶员、设备、车辆)，本文使用单一的车辆和路径以及不同的驾驶员以平静和攻击性的方式驾驶进行了一项受控评估研究。</li><li>实验结果表明，SenseFleet能够准确地检测出危险驾驶事件，并能区分激进驾驶者和冷静驾驶者。评分结果与每个驾驶员为他们的实验提供的主观风险度量进行比较。结果显示，SenseFleet的分数在$\pm 1$邻近的司机集群。</li></ul><h1 id="Driver-behaviour-proﬁles-for-road-safety-analysis"><a href="#Driver-behaviour-proﬁles-for-road-safety-analysis" class="headerlink" title="Driver behaviour proﬁles for road safety analysis"></a>Driver behaviour proﬁles for road safety analysis</h1><p><strong>论文题目</strong>：用于道路安全分析的驾驶员行为概况</p><div class="note danger"><p>综述类文章，后续需要详细看一下，下面还未总结</p></div><p>超过90%的道路交通事故是由司机的行为引起的。因此，识别从事不安全驾驶行为的司机有很大的好处。驾驶员行为概况(DBPs)在这里被引入，作为一种评估驾驶员行为作为伤亡事故风险的函数的方法。他们使用全球定位系统(GPS)设备收集的数据，并辅以时空信息。这些配置文件由共同的风险分数组成，可以用来比较驾驶员之间的不同时间和空间。这篇论文详细介绍了这些dbp的发展，并演示了它们在建模影响驾驶员行为的因素时的使用。结果表明，即使控制了道路环境的影响，这些因素仍然是驾驶员行为最强的预测因子，表明不同的时空环境会引起驾驶员的各种心理反应。通过评估行为改变干预措施的影响，保险公司和政府将会对提高道路驾驶司机的风险评估方法和结果感兴趣。</p><h1 id="Investigations-on-Driver-Unique-Identification-from-Smartphone’s-GPS-Data-Alone"><a href="#Investigations-on-Driver-Unique-Identification-from-Smartphone’s-GPS-Data-Alone" class="headerlink" title="Investigations on Driver Unique Identification from Smartphone’s GPS Data Alone"></a>Investigations on Driver Unique Identification from Smartphone’s GPS Data Alone</h1><p><strong>论文题目</strong>：仅从智能手机的GPS数据调查驾驶员的唯一身份</p><p><strong>驾驶员身份识别</strong>一个新兴领域。</p><p>本文提出了一种仅使用智能手机GPS数据进行驾驶员识别的方法。</p><p><strong>数据</strong><br>本文的实验中，使用了两个月的时间收集了38个驾驶员的数据，总行程5万公里。<br>从每一次完成的行程中生成的数据中提取一组137个统计特征，从而量化驾驶员的自然风格。<br>为了进行驾驶员识别，本文将驾驶员分成4 - 5人的自然组，每组以路线邻近度作为分离的决定因素。</p><p><strong>结果</strong></p><ul><li>对于“驾驶员识别”问题，4-5名驾驶员组的平均准确率为82.3%</li><li>某些行为属性如高驾驶技能会影响识别的准确性。</li><li>随机森林分类器提供了最好的结果。</li><li>这些结果对各种利益相关者有很大的影响，因为所提出的方法可以根据驾驶员的自然驾驶风格来识别驾驶员，而这种自然驾驶风格是通过仅从GPS数据中提取的统计参数来量化的。</li></ul><p><strong>结论</strong></p><ul><li>即使只使用智能手机GPS，也有可能以相当高的精度识别司机。</li><li>为了识别出相似的司机需要进行更多的调查。</li><li>如果研究车辆电子控制单元中附加的感觉信息能与gps数据相混淆，那么准确率就会大大提高。</li></ul><h1 id="Know-Your-Master-Driver-Proﬁling-based-Anti-theft-Method"><a href="#Know-Your-Master-Driver-Proﬁling-based-Anti-theft-Method" class="headerlink" title="Know Your Master: Driver Proﬁling-based Anti-theft Method"></a>Know Your Master: Driver Proﬁling-based Anti-theft Method</h1><p><strong>论文题目</strong>：了解你的master:基于司机档案的防盗方法</p><p>本文提出了 <strong>驾驶员验证方法</strong>，该方法利用车辆传感器的测量数据分析驾驶模式。</p><p><strong>驾驶员识别</strong>方向</p><p><strong>数据集</strong></p><p><a href="http://ocslab.hksecurity.net/Datasets/driving-dataset" target="_blank" rel="noopener">CAN data</a></p><ol><li>本文分析司机的真实驾驶数据。且本文从机动车道、城市道和停车场三种道路类型收集数据。10名司机的驾驶数据被反复收集。</li><li>根据难以绕路的行为特征对驾驶员进行分类。为了提高精度，本文丰富了特征集，包括在之前的工作中广泛使用的与制动和加速相关的行为特征，以及从驾驶员行为推导出的机械特征。</li><li>通过特征选择，设计了考虑显著特征的模型。这减少了特征处理的时间开销，提高了检测性能。</li><li>通过导出平均值、中位数和标准差等统计特征来丰富特征集。这使得每个驾驶员的特征值波动的影响最小，最终得到一个可靠的模型。</li><li>处理滑动窗口检测时间点，当检测成为可靠的，并尽快通知车主盗窃事件。</li></ol><h1 id="Various-Approaches-for-Driver-and-Driving-Behavior-Monitoring-A-Review"><a href="#Various-Approaches-for-Driver-and-Driving-Behavior-Monitoring-A-Review" class="headerlink" title="Various Approaches for Driver and Driving Behavior Monitoring: A Review"></a>Various Approaches for Driver and Driving Behavior Monitoring: A Review</h1><p><strong>论文题目</strong>：驾驶员和驾驶行为监控的各种方法:综述 <a href="/posts/100001/" title="全文笔记">全文笔记</a></p><p>这篇文章回顾了各种可用的方法来确定困倦和分心的司机的状态。通过对驾驶员视觉特征、非视觉特征和驾驶行为行为等驾驶员行为的研究来检测驾驶员困倦。</p><ol><li>PERCLOS、闭眼时间(ECD)、闭眼频率(FEC)是一种基于视觉特征的检测驾驶员睡意的系统。<br>其中，PERCLOS在检测睡意方面表现良好，但存在光照条件等局限性。为了克服这个问题，使用了850nm的IR光源。</li><li>生理信号如ECG、EEG、EoG和PPG信号作为非视觉特征检测驾驶员困倦。尽管生理信号比视觉特征表现出更好的表现，但它们也有一些局限性，尤其是它们的侵入性。为了克服这个问题，应该开发侵入性较小的传感器。目前，ECG信号可以用一种较少干扰的方式捕获。驾驶性能行为如方向盘运动和侧位标准偏差也被用来检测困倦。</li><li>驾驶员注意力分散是通过头部姿势和注视方向来检测的。驾驶员的分心可能会导致更大的车道变化，更慢的对障碍的反应，以及更突然的转向控制。因此，为了开发一个更安全的驾驶员监控系统，我们应该监控驾驶员的分心。</li><li>对于主动驾驶安全系统而言，预测不安全驾驶行为是一种可取的方法。本文解释了基于面部表情和汽车动力学的预测方法。通过面部表情检测驾驶员的情绪，有助于预测驾驶员的驾驶行为。</li><li>最后本文讨论了主动驾驶安全系统未来发展中需要解决的几个问题。它们是a)检测睡意的混合措施，b)安全驾驶的驾驶环境感知，c)模拟和真实驾驶条件的公共数据集的可用性。</li></ol><h1 id="Who-is-behind-the-wheel-Driver-identification-and-fingerprinting"><a href="#Who-is-behind-the-wheel-Driver-identification-and-fingerprinting" class="headerlink" title="Who is behind the wheel? Driver identification and fingerprinting"></a>Who is behind the wheel? Driver identification and fingerprinting</h1><p><strong>论文题目</strong>：谁在开车?驾驶员身份和指纹识别</p><p><strong>驾驶员识别</strong></p><p><strong>研究问题</strong> </p><p>利用车载传感器数据描述驾驶员的驾驶风格</p><p><strong>本文方法</strong><br>本文利用车载传感器测量的真实驾驶数据集来解决驾驶员识别问题，提出了一种基于驾驶模式的时间优化的驾驶员指纹识别方法。</p><p>本文研究了达到预期识别性能所需的最小学习和分类时间。进一步进行特征选择，提取与驾驶员识别最相关的特征。最后，除了与驾驶模式相关的特征外，还显示了驾驶员相关的特征(比如，心率)，进一步提高了识别性能。</p><p><strong>数据集</strong></p><p>本文使用了三个数据集：</p><ol><li><a href="https://ocslab.hksecurity.net/Datasets/driving-dataset" target="_blank" rel="noopener">Security dataset</a></li><li><a href="http://www.robesafe.uah.es/personal/eduardo.romera/uah-driveset/" target="_blank" rel="noopener">UAH‑DriveSet</a></li><li><a href="https://www.hcilab.org/research/hcilab-driving-dataset/." target="_blank" rel="noopener">HciLab dataset</a></li></ol><p><strong>结果表明</strong></p><ul><li>车内网络数据如燃油平衡、制动踏板和方向盘数据对驾驶员的准确识别具有重要意义。</li><li>使用有限数量的传感器数据从受限但明智地选择的一组传感器收集，可以在驾驶的前3分钟内以非常高的准确性识别驾驶员。</li></ul>]]></content>
      
      
      <categories>
          
          <category> paper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> paper </tag>
            
            <tag> driving behavior proﬁling </tag>
            
            <tag> summary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>The Simpler The Better:A Unified Approach to Predicting Original Taxi Demands based on Large-Scale Online Platforms</title>
      <link href="/posts/60400/"/>
      <url>/posts/60400/</url>
      
        <content type="html"><![CDATA[<p><strong>论文题目</strong>：越简单越好:基于大型在线平台的原始出租车需求预测的统一方法</p><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p><strong>翻译</strong>：<br>出租车呼叫应用程序因其为有需要的乘客调度闲置出租车的效率而越来越受欢迎。为了准确平衡出租车供需，网络出租车平台需要预测单位原始出租车需求(UOTD)，即单位时间(如每小时)和单位区域(如每个POI)提交的叫车需求数量。预测UOTD对于大型工业在线出租车平台来说不是小事，因为准确性和灵活性都是必不可少的。复杂的非线性模型，如GBRT和深度学习，通常是准确的，但需要劳动密集型的模型重新设计后，场景变化(例如，额外的约束，由于新的法规)。为了准确地预测UOTD，同时保持对场景变化的灵活性，我们提出LinUOTD，这是一个具有超过2亿个特征维度的统一线性回归模型。简单的模型结构消除了重复模型设计的需要，而高维特征有助于准确的UOTD预测。我们进一步设计了一系列优化技术，以提高模型的训练和更新效率。对来自一个工业在线出租车平台的两个大型数据集的评估证实LinUOTD在准确性上优于流行的非线性模型。我们设想在UOTD预测中采用具有高维特征的简单线性模型的经验，作为一项试点研究，可以提供一些见解</p><p><strong>总结</strong>：</p><ul><li><p>Unit Original Taxi Demand 简称 UOTD ，单位原始出租车需求</p></li><li><p>为了准确平衡出租车供需，网络出租车平台需要预测单位原始出租车需求(UOTD)，即单位时间(如每小时)和单位区域(如每个POI)提交的叫车需求数量。</p></li><li><p>为了准确地预测UOTD，同时保持对场景变化的灵活性，本文提出了LinUOTD，一个具有超过2亿个特征维度的统一线性回归模型。</p></li></ul><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><ul><li>出租车需求的代表性指标是单位原始出租车需求(UOTD)，即单位时间(如每小时)、单位区域(如每个POI)提交给网络出租车平台的叫车订单数量。</li><li>pick-ups  简称 PU 拾取器</li><li>UOTD不同于拾取器的数量(PU)。单位时间和单位区域的PU数是UOTD的子集，因为UOTD忽略了最终放弃打车的潜在乘客。相比之下，UOTD则反映了给定时间和空间内完整的原始乘客需求。</li></ul><p>UOTD信息对网络出租车平台有三重好处。</p><ol><li>拓展潜在市场。通过比较历史UOTD和对应的PU数，平台可以发现呼叫出租车动机强但最终打车次数少的时间和地区。</li><li>评估激励机制。UOTD反映了用户在采用新的折扣策略和动态定价后乘坐出租车出行的意愿。</li><li>指导出租车调度。在线出租车平台可以提前预测漫游出租车的流量，为乘客分配漫游出租车提供便利。</li></ol><ul><li>过去的出租车需求预测方面的重点是预测PU的数量。他们通常根据出租车轨迹与出租车轨迹之间的关系来预测出租车轨迹的数量。然而，出租车轨迹并不总是与uotd相关联。这样就不可能将PU预测扩展到UOTD预测，使得PU预测无法扩展到UOTD预测。</li></ul><p>两种范式:</p><ol><li>具有少量特征的复杂(非线性)模型：<ul><li>优点:(在大多数时空预测研究中是首选的)</li><li>缺点:(需要连续不断地重复劳动密集型的模型重新设计过程)</li></ul></li><li>具有大量特征集的简单(线性)模型<ul><li>一个具有大量特征的线性模型，以统一的框架方便新信息的整合。</li></ul></li></ol><p>存在的问题以及解决的方案：</p><ol><li><p>统一的简单线性模型是否能够准确地预测UOTD</p><ul><li>本文通过整合来自异构数据集的高维特征来解决这个问题</li><li>首先调查多个真实数据集，包括原始出租车需求(OTD)，兴趣点(POI)和气象学</li><li>本文框架将在空间、时间、气象和事件域上处理四种基本特征，并基于在线出租车平台的业务逻辑生成大量组合特征。</li></ul></li><li><p>高维特征也给在大规模数据集上训练高维特征模型带来了额外的挑战。</p><ul><li>本文的LinUOTD框架通过一个<strong>基于参数服务器的分布式框架</strong>来解决这个问题，以并行化和加速模型训练，并通过一个基于hash的特征标记方案来实现并行和可扩展的特征工程。</li><li>LinUOTD采用L1和L2正则化方法，设计了<strong>时空正则化</strong>方法，在避免过拟合的同时进行准确的预测。</li></ul></li></ol><p>本文提出的框架概述<br><img src= "/img/loading.gif" data-lazy-src="attachment:image.png" alt="image.png"></p><p>本文的贡献：</p><ul><li>首次尝试采用具有<strong>高维（数亿）特征</strong>的简单线性模型来预测UOTD，以满足大型在线出租车平台的准确性和灵活性要求。</li><li>将模型重新设计的开销转换为特征工程，并应用分布式学习框架来支持快速，并行和可扩展的特征更新和测试。</li><li>本文的方法在预测准确性方面优于经典非线性模型。</li></ul><h2 id="数据集"><a href="#数据集" class="headerlink" title="数据集"></a>数据集</h2><p>数据集描述：</p><ul><li>数据集中包括原始出租车需求记录，地理信息和气象数据。 </li><li>在中国的两个大城市（北京和杭州）收集的</li></ul><h3 id="原始出租车需求记录数据（Original-Taxi-Demand-Record-Data）"><a href="#原始出租车需求记录数据（Original-Taxi-Demand-Record-Data）" class="headerlink" title="原始出租车需求记录数据（Original Taxi Demand Record Data）"></a>原始出租车需求记录数据（Original Taxi Demand Record Data）</h3><p><strong>北京数据集</strong></p><ul><li>北京数据集的原始出租车需求记录是从中国的在线出租车平台按比例采样的。</li><li>原始数据集包含北京三个月连续75天的23,851,235原始出租车需求记录。</li><li>数据集中的每个记录都由用户ID，时间戳，起点和终点的位置，距离估计和折扣信息组成。</li></ul><p><strong>杭州数据集</strong></p><ul><li>杭州数据集的原始出租车需求记录是从同一在线出租车平台上按比例抽样的。</li><li>原始的杭州数据集包含三个月内连续75天的连续12,354,687张出租车的原始需求记录。</li><li>数据集中的每个记录都由用户ID，时间戳，起点和终点的位置，距离估计和折扣信息组成。</li></ul><p>其中</p><ul><li>用户ID，时间戳，起点和终点由用户提交。</li><li>出租车平台基于用户提交的信息来计算距离估计和折扣信息。</li><li>用户ID和目的地被省略，因为它们与UOTD预测无关。</li></ul><p><strong>数据集分析图</strong>分为6个部分:</p><ul><li>所有原始出租车需求记录中起点位置的热图，可以观察到出租车需求集中的几个位置。(集中在市中心，密集的居民区和交通枢纽)</li><li>每天原始出租车需求记录的标准化数量的分布（三个月内）。可以表明出租车需求可能会受到动态时间因素（例如天气）的影响。</li><li>原始滑行需求的标准化数量相对于不同估计距离的分布（黄色曲线）和累积百分比（绿色曲线）。可以表明短途旅行占了出租车总需求的主导。</li><li>折扣的分布，可以看到大多数出租车需求在哪个区间内获得折扣。</li></ul><p>因为不同城市间的气候、经济和城市规划存在差异，所以添加两种数据：</p><ul><li>POI兴趣点空间分布图</li><li>每月天气分布图</li></ul><h3 id="POI-Data"><a href="#POI-Data" class="headerlink" title="POI Data"></a>POI Data</h3><ul><li>来自中国主要在线地图服务提供商的大规模地理信息数据集。</li><li>本文利用兴趣点（POI）的地理信息</li></ul><p><strong>北京</strong>：</p><ul><li>北京POI数据集包含北京的55,447个不同的POI。</li><li>每个记录都包含一个职位，一个姓名，一个行政区和一个三级类别。 </li></ul><p>一条记录如下所示：<br>$$<br>(116.49460 40.00057, Wangjing，Playground,Changyang District,Entertainment:OurdoorActivity:Playground)<br>$$<br>其中 </p><ul><li>（116.49460 40.00057）代表POI的经度和纬度，</li><li>Wangjing Playground表示POI名称，</li><li>Changyang District是一个行政区在北京，</li><li>Entertainment:OurdoorActivity:Playground即娱乐：户外活动：游乐场，这是三个级别的类别。<ul><li>三级类别分别由粗略级（娱乐），中级（户外活动）和子级（游乐场）组成。 </li></ul></li></ul><ul><li>总共将POI分为16个粗级别，83个中级别和155个子级别。 </li><li>POI可以帮助解释出租车旅行的动机，从而解释UOTD的时空分布。</li></ul><p>16种POI的粗略分类：<br><img src= "/img/loading.gif" data-lazy-src="attachment:image.png" alt="image.png"></p><ul><li>本文的目标是预测每个POI的UOTD，因此本文通过将每个原始出租车需求记录的坐标与最近的POI相关联来对其进行预处理。</li></ul><p><strong>杭州</strong>：<br>杭州的POI数据集，其中包含42965个杭州不同的POI，和北京有着相同的类别</p><h3 id="Meteorology-Data"><a href="#Meteorology-Data" class="headerlink" title="Meteorology Data"></a>Meteorology Data</h3><ul><li>通过中国政府的在线气象网站在相应的三个月内进一步收集北京的气象数据。</li><li>每个气象记录都包含一个时间戳以及每小时的天气状况，温度，风，湿度和空气质量信息。天气状况分为雨夹雪，薄雾，雪，雨，晴朗，多云，雾和阴天。</li><li>空气质量分为六个等级：良好，中等，轻度污染，中度污染，重度污染和重度污染。</li></ul><p><strong>存在的问题及解决方法</strong>：<br>问题： </p><ul><li>在气象数据集中，有6％的记录不完整或为空。<br>解决方法：</li><li>通过将前几个小时和下几个小时的值进行平均，本文可以完成缺少的温度，风力和湿度。</li><li>对于缺少的天气状况和空气质量信息，我们使用与前一小时相同的值。</li></ul><h2 id="特征工程"><a href="#特征工程" class="headerlink" title="特征工程"></a>特征工程</h2><ul><li>采用高维特征来补偿简单线性模型的表达，从而使它们具有复杂非线性模型的预测能力。</li></ul><h3 id="基本特征"><a href="#基本特征" class="headerlink" title="基本特征"></a>基本特征</h3><h4 id="时间特征（Temporal-Features）"><a href="#时间特征（Temporal-Features）" class="headerlink" title="时间特征（Temporal Features）"></a>时间特征（Temporal Features）</h4><ul><li>Month</li><li>Day of month</li><li>Day of week</li><li>Hour</li><li>Holiday</li><li>Historical UOTD </li></ul><p>平日，周末和全天的标准化每小时出租车需求分布图，可以看出需求在工作日和周末之间具有不同的时间模式。（工作日有两个高峰，分别代表早晨高峰和傍晚高峰。 在周末，晚上只有一个高峰。）</p><h4 id="空间特征（Spatial-Features）"><a href="#空间特征（Spatial-Features）" class="headerlink" title="空间特征（Spatial Features）"></a>空间特征（Spatial Features）</h4><ul><li><p>District</p></li><li><p>POI name</p></li><li><p>POI category</p></li><li><p>Distance distribution</p></li><li><p>16种粗略POI类别中的每一种的规范化出租车需求图。[属于“基础设施”类别（例如，火车站和机场）的POI和“住所”看到了更多的出租车需求。]<br>标准化的出租车平均需求量</p></li><li><p>短，中，长出租车行程图。 [长途骑行（&gt; 20公里）的需求相对稳定，而对短途骑行（&lt;8km）的需求在不同的日子里急剧波动,如果来自POI的滑行需求主要由长途行驶所控制，则从该POI开始的滑行需求很可能在一段时间内保持稳定。]</p></li></ul><h4 id="气象特征（Meteorological-Features）"><a href="#气象特征（Meteorological-Features）" class="headerlink" title="气象特征（Meteorological Features）"></a>气象特征（Meteorological Features）</h4><ul><li>Weather condition </li><li>Temperature </li><li>Wind</li><li>Humidity</li><li>Air quality </li></ul><h4 id="活动特征（Event-Features）【影响打车者的动机】"><a href="#活动特征（Event-Features）【影响打车者的动机】" class="headerlink" title="活动特征（Event Features）【影响打车者的动机】"></a>活动特征（Event Features）【影响打车者的动机】</h4><ul><li>Discount pricing strategy</li><li>Even-odd license plate plan</li><li>Version of the App </li></ul><h3 id="组合特征"><a href="#组合特征" class="headerlink" title="组合特征"></a>组合特征</h3><ul><li>线性模型无法描述输入特征之间的相关性</li><li>将多样化的组合特征输入模型有助于从多尺度和多方面表征不同因素之间的相互作用，这是提高模型的预测能力的关键。</li></ul><h4 id="时时组合特征（Temporal-Temporal-Combinational-Features）"><a href="#时时组合特征（Temporal-Temporal-Combinational-Features）" class="headerlink" title="时时组合特征（Temporal-Temporal Combinational Features）"></a>时时组合特征（Temporal-Temporal Combinational Features）</h4><ul><li>将一天中的小时和星期几作为一个组合功能</li></ul><h4 id="时空组合特征（Temporal-Spatial-Combinational-Features）"><a href="#时空组合特征（Temporal-Spatial-Combinational-Features）" class="headerlink" title="时空组合特征（Temporal-Spatial Combinational Features）"></a>时空组合特征（Temporal-Spatial Combinational Features）</h4><ul><li>POI类别和“小时”的组合将捕获出租车需求的这种时空依赖性</li></ul><p>居住类POI和基础设施类POI的平均每小时标准化出租车需求图</p><h4 id="气象空间组合特征（Meteorological-Spatial-Combinational-Features）"><a href="#气象空间组合特征（Meteorological-Spatial-Combinational-Features）" class="headerlink" title="气象空间组合特征（Meteorological-Spatial Combinational Features）"></a>气象空间组合特征（Meteorological-Spatial Combinational Features）</h4><ul><li>结合气象和空间特征的理由是，气象信息对出租车需求的影响因功能不同的POI而异。</li><li>雨天和非雨天娱乐场所和机场的平均每小时标准化出租车需求图【降雨对机场的影响不明显。娱乐场所的需求对降雨敏感】</li></ul><h4 id="其他组合功能（Other-Combinational-Features）"><a href="#其他组合功能（Other-Combinational-Features）" class="headerlink" title="其他组合功能（Other Combinational Features）"></a>其他组合功能（Other Combinational Features）</h4><ul><li>将POI，小时和天气组合为时空气象特征</li></ul><p>本文最终选择了100多种功能，这些功能包括2亿个维度。</p><p>本文的特征表：</p><p><img src= "/img/loading.gif" data-lazy-src="attachment:image.png" alt="image.png"></p><h2 id="模型和优化"><a href="#模型和优化" class="headerlink" title="模型和优化"></a>模型和优化</h2><ul><li>LinUOTD模型，具有高维特征和时空正则化器的线性回归模型</li><li>为了有效地训练LinUOTD模型，本文采用了基于参数服务器的分布式学习框架和基于散列的令牌化方法</li></ul><h3 id="UOTD预测模型"><a href="#UOTD预测模型" class="headerlink" title="UOTD预测模型"></a>UOTD预测模型</h3><ul><li>原始数据集 $D= {(x_i,y_i)|i=1,2,…,N }$</li><li>$(x_i,y_i)$ 表示第i个样本的UOTD和相应的特征向量。</li><li>$p_i = w^\prime x_i$ </li></ul><p>$$<br>obj_{linear}(w) = \sum_{i=1}^N (y_i-p_i)^{2} + \lambda_1 |w|_1 + \lambda_2 |w|_2<br>$$</p><ul><li><p>$y$ the UOTD in a specific hour at a given POI  </p></li><li><p>$x \in \mathbb{R}^m $ the feature vector corresponding to $y$ </p></li><li><p>一个具有超过两亿维的非常高维的向量。</p></li><li><p>real-world UOTD records close in space or time tend to be similar.</p></li><li><p>UOTD预测结果的这种平滑性要求导致本文设计以下目标函数来反映时空正则化：<br>$$<br>obj_{spatio-temporal}(w) = \sum_{X \subseteq D} \phi(X) var({ w^\prime x|x \in X})<br>$$</p></li><li><p>$var()$ 表示方差</p></li><li><p>$X$ 是 $D$ 的子集</p></li><li><p>$\phi(X)$ 将POI和时间的子集映射为实值，该实值控制X中实例x的预测方差的正则化。</p></li></ul><p>$$<br>\phi(X) = \prod_{x \in X} \frac{1}{\sigma \sqrt{2 \pi}} e^{- \frac{(x - \overline{X})^\prime((x - \overline{X})}{2\sigma}}<br>$$</p><ul><li>$\overline{X} = \frac{1}{|X|} \sum_{x \in X} x$ $\overline{X}$表示X的均值</li></ul><p>$$<br>obj_{LinUOTD}(w) = \sum_{i=1}^N (y_i-p_i)^{2} + \lambda_1 |w|<em>1 + \lambda_2 |w| _2 + \gamma \sum</em>{X \subseteq D} \phi(X) var({ w^\prime x|x \in X})<br>$$</p><ul><li>$\gamma$ 权衡参数，可以全局控制时空正则化的影响。</li></ul><p>使目标函数$obj_{LinUOTD}(w)$最小化，采用了具有egulatized dual average (RDA)和AdaGrad的随机梯度下降算法，如FTR1算法。<br>在不考虑L1和L2正则化的情况下，我们可以使用基于minibatch的随机梯度下降来最小化：<br>$$<br>w_{t+1} = w_t - \eta_t g_t<br>$$</p><ul><li>$t$表示迭代次数</li><li>$\eta_t$是第t次迭代的学习率</li><li>$g_t$表示第t次迭代的梯度。</li></ul><p>从迭代t的数据中抽取一个小批量$X \subseteq D$</p><ul><li>以矩阵形式$X_t = (x_1,…,x_l)^\prime$表示</li><li>定义$\overline{X_t} = (\overline{X_t},\overline{X_t},…,\overline{X_t})^\prime$</li></ul><p>在$obj_{LinUOTD}(w)$中没有L1，L2损失的目标函数的导数是<br>$ g_t = X^\prime_t(p_t - y_t) + \gamma \phi(X) (X^\prime_t X - \overline{X_t}^\prime\overline{X_t})$</p><ul><li>其中$p_t$和$y_t$分别是$X_t$中数据的预测向量和标签向量。</li></ul><p><strong>RDA</strong>:解决正则化<br>$w_{t+1} = w_t - \eta_t g_t$的对偶如下：<br>$$<br>w_{t+1} =argmin_w(\sum_{s=1}^t g_s w + \frac{1}{2} \sum_{s=1}^t (\sigma_s |w-w_s|<em>2^2 + \lambda_1 \Vmatrix w|_1) + \lambda_2 |w|_2)<br>$$<br>其封闭形式的求解器如下:<br><img src= "/img/loading.gif" data-lazy-src="attachment:image.png" alt="image.png"><br>遵循AdaGrad，调整坐标的学习率以加快学习过程:<br>对于$g_t$的第i个坐标，<br>$$<br>\eta</em>{t,i} = \frac{\alpha}{\beta+\sum_{s=1}^t g_{s,i}^2}<br>$$<br>以上公式推导参考论文</p><ul><li>B. McMahan, G Holt, D Sculley, M. Young, D. Ebner, J. Grady, L. Nie, T. Phillips, E. Davydov, D. Golovin, S. Chikkerur, D. Liu, M. Wattenberg, A. Hrafnkelsson, T. Boulos, and J. Kubica. 2013. Ad click prediction: a view from the trenches. In The 19th ACM International Conference on Knowledge Discovery and Data Mining, Chicago, IL, USA. 1222–1230.</li></ul><h2 id="实现和优化"><a href="#实现和优化" class="headerlink" title="实现和优化"></a>实现和优化</h2><ul><li>LinUOTD的结构简单，有2亿维的功能</li><li>在一台机器上训练LinUOTD不可行。 为了有效地学习高维特征，本文利用了一个基于参数服务器的分布式学习框架和一个基于散列的令牌化方法。</li></ul><h3 id="系统优化"><a href="#系统优化" class="headerlink" title="系统优化"></a>系统优化</h3><p>用于训练LinUOTD的基于参数服务器的分布式框架的体系结构：<br><img src= "/img/loading.gif" data-lazy-src="attachment:image.png" alt="image.png"></p><ul><li>该框架由多个参数服务器和工作节点组成，适用于海量数据集上的并行机器学习。</li><li>所有模型参数均<strong>均匀地分布</strong>在参数服务器之间，而训练数据则在<strong>训练过程开始时</strong>分配到每个工作节点。</li><li>在训练过程中，每个工作节点运行多个并行工作程序（线程），这些工作程序以小批量分析训练样本，通过全局特征哈希函数从参数服务器中获取相应的参数，并计算预测值和梯度。</li><li>算法1+算法2</li></ul><h3 id="特征工程优化"><a href="#特征工程优化" class="headerlink" title="特征工程优化"></a>特征工程优化</h3><ul><li>通过特征标记化，可以为每个功能（可以是值，字符串或它们的组合）分配唯一的ID</li><li>由于分配全局唯一的功能ID需要所有线程共享一个锁，因此令牌化使并行计算变得困难且效率低下。</li></ul><p>本文提出了一种基于哈希的令牌化方法，该方法以无锁的方式为每个功能分配一个ID，同时确保ID的全局唯一性。 </p><ul><li>通过诸如murmurhash和cityhash的哈希方案将每个离散功能哈希到64位空间。 因此，即使对于十亿维特征，哈希冲突的速率仍然很低。<br>基于哈希的令牌化具有两个优点：</li><li>并行性。 由于所有线程之间需要共享锁，因此无法并行化经典令牌化方案。 相反，基于散列的令牌化是无锁的，因此可以进行并行计算。 </li><li>可伸缩性。 要对新数据特征维度进行令牌化，基于哈希的令牌化仅需要对新维度进行哈希处理，而无需重新分配ID。 </li></ul><p>上述基于散列的令牌化在我们的分布式并行学习框架中至关重要，可大大加快数据准备过程。</p><p>算法1总结了每个工人的梯度计算过程。<br><img src= "/img/loading.gif" data-lazy-src="attachment:image.png" alt="image.png"></p><ul><li>相同参数的梯度将首先通过工作人员内部聚合进行聚合</li><li>然后在工作节点之间转移以进行跨工作人员聚合</li><li>最后所有新计算的梯度将被推送到相应的参数服务器，并且每个参数服务器将使用接收到的梯度相应地更新参数。</li></ul><p>算法2根据Sec中的公式详细说明了每个参数服务器上的参数更新过程<br><img src= "/img/loading.gif" data-lazy-src="attachment:image.png" alt="image.png"><br>以上迭代将一直持续到训练过程结束。</p><h2 id="实验研究"><a href="#实验研究" class="headerlink" title="实验研究"></a>实验研究</h2><h3 id="实验设置"><a href="#实验设置" class="headerlink" title="实验设置"></a>实验设置</h3><ul><li>在两个数据集上：北京和杭州</li><li>按时间顺序排列每个数据集，并使用前3/4进行训练，其余1/4进行测试。</li></ul><h4 id="基线"><a href="#基线" class="headerlink" title="基线"></a>基线</h4><ul><li><strong>HA(Historical Average)</strong>：<br>历史平均值。使用同期内历史UOTD的平均值来预测UOTD</li><li><strong>ARIMA(Auto-RegressiveIntegratedMovingAverage)</strong>：<br>自回归综合移动平均线。使用时间序列模型预测UOTD。</li><li><strong>Markov(Markov Model)</strong>：<br>马尔可夫模型。通过基于15个最近对应周期的UOTD训练3阶马尔可夫预测器来预测UOTD。</li><li><strong>GBRT(Gradient Boosted Regression Tree)</strong>：<br>梯度增强回归树。使用非参数回归预测UOTD。</li><li><strong>NN(Neural Network)</strong>：<br>通过使用15个最近对应时间段的UOTD训练神经网络来预测UOTD</li><li><strong>HP-MSI</strong>：<br>采用最先进的技术来预测UOTD，以预测要从每个自行车站出租或返还每个自行车站的自行车数量</li></ul><h4 id="指标"><a href="#指标" class="headerlink" title="指标"></a>指标</h4><ul><li>Error Rate (ER)</li><li>Symmetric Mean Absolute Percent Error (SMAPE) </li><li>Root Mean Squared Logarithmic Error (RMLSE) </li></ul><p>$$<br>ER = \frac{\sum_{i=1}^N |p_i-y_i|}{\sum_{i=1}^N y_i} \<br>SMAPE = \frac{2}{N} \sum_{i=1}^N \frac{|p_i-y_i|}{p_i+y_i+1} \<br>RMLSE = \sqrt{\frac{1}{N} \sum_{i=1}^N (\log (p_i+1)-\log(y_i+1))^2}<br>$$</p><h3 id="总体结果"><a href="#总体结果" class="headerlink" title="总体结果"></a>总体结果</h3><p><img src= "/img/loading.gif" data-lazy-src="attachment:image.png" alt="image.png"></p><ol><li><p>朴素的HA在两个数据集上的表现都很差。但是，有时ARIMA和Markov甚至比单纯的HA方法还差。一个可能的原因可能是时间序列方法忽略了UOTD的空间变化。因此，它们倾向于对不同区域产生不稳定的预测精度，因此在大规模数据集上的总体性能不令人满意。 </p></li><li><p>NN和GBRT是两种竞争方法。原因可能是这两种方法都是受监督的非线性模型，并且能够从多个异构数据源中提取时空特征。</p></li><li><p>专为时空预测而设计的方法（HP-MSI和我们的LinUOTD）可实现最佳整体性能。我们的LinUOTD在两个数据集上的几乎所有指标上均优于HP-MSI。唯一的例外是杭州数据集上的SMAPE指标，其中HP-MSI得出的SMAPE略低。</p></li></ol><p>总之，LinUOTD通过采用简单的线性回归模型，通常优于所有基线（基于时间序列的方法和复杂的非线性模型），这表明正确选择的大量特征集可以弥补UOTD预测中模型的简单性。</p><h3 id="特征贡献分析"><a href="#特征贡献分析" class="headerlink" title="特征贡献分析"></a>特征贡献分析</h3><ul><li>最有帮助的功能是时间（星期几，小时），空间（POI名称，POI类别）和气象（天气状况，温度，空气质量）功能的多尺度组合。</li><li>最后两个主要特征是基本的时间特征，这与直觉是UOTD与不同时间尺度的最新历史UOTD高度相关。 </li><li>具体而言，UOTD倾向于在短时间内（例如，与1天前的UOTD比较）平稳变化，并表现出某些周期性模式（例如，与7天前的UOTD比较）。</li></ul><h3 id="原型系统"><a href="#原型系统" class="headerlink" title="原型系统"></a>原型系统</h3><p>技术：</p><ul><li>使用flatty（基于引导程序的模板）来构建前端基本页面</li><li>使用mapbox API（自定义在线地图的较大提供者）来创建页面上与地图相关的元素</li><li>后端，使用flask（Web应用程序的python微框架）处理请求</li></ul><p>功能：</p><ul><li>用户为POI和当前时间提交关键字（顶部）后，将显示相关POI（左侧），并且POI的位置也会在地图上标记出来。</li><li>用户还可以通过选择“查看3D”来查看3D视图。 </li><li>POI下一个小时的预测将由不同高度和颜色的条形表示。</li><li>当用户通过将光标放在某个POI附近来导航POI时，UOTD预测的详细信息将显示在灰色表中，其中包括接下来五个小时的预测以及最近五个小时的历史UOTD记录。</li></ul><p>特征贡献分析表<br><img src= "/img/loading.gif" data-lazy-src="attachment:image.png" alt="image.png"></p><h2 id="相关工作"><a href="#相关工作" class="headerlink" title="相关工作"></a>相关工作</h2><h3 id="出租车需求预测"><a href="#出租车需求预测" class="headerlink" title="出租车需求预测"></a>出租车需求预测</h3><ul><li>根据预测模型是否需要出租车轨迹，分为基于轨迹的预测和无轨迹的预测。</li></ul><h4 id="基于轨迹的预测："><a href="#基于轨迹的预测：" class="headerlink" title="基于轨迹的预测："></a>基于轨迹的预测：</h4><ul><li>一个基于历史滑行轨迹的聚类和时间序列预测相结合的框架，以预测市区内的出租车需求。</li><li>一个模型来预测给定出租车站的未来服务数量，其中GPS轨迹和事件信号被转换成感兴趣的时间序列，既是学习基础又是流测试框架。 </li><li>利用出租车的历史GPS轨迹推荐快速接载乘客的地方。</li><li>一种改进的基于ARIMA的预测模型，以使用大规模GPS跟踪数据集来预测给定热点处的乘客时空变化。</li><li>在纽约市分析了超过1400万辆出租车的接送样本，并显示出出租车需求的高度可预测性。</li><li>一种预测查询，以根据移动出租车的历史数据来预测对象的聚集数量。</li><li>结合出租车的轨迹和航班到达数据来预测未满足的出租车需求，这意味着出租车需求与机场出租车的潜在供应之间的差距。</li></ul><p><strong>缺点</strong>：轨迹信息并不总是与UOTD信息相关联。</p><h4 id="基于无轨迹的预测："><a href="#基于无轨迹的预测：" class="headerlink" title="基于无轨迹的预测："></a>基于无轨迹的预测：</h4><ul><li>估计自行车共享系统的总体需求，可以很容易地扩展它以预测出租车需求。</li><li>本文以此作为基准</li></ul><h3 id="使用参数服务器进行分布式机器学习"><a href="#使用参数服务器进行分布式机器学习" class="headerlink" title="使用参数服务器进行分布式机器学习"></a>使用参数服务器进行分布式机器学习</h3><ul><li>工业应用程序通常采用分布式机器学习框架来处理大型数据集上的大量功能。 </li><li>传统的分布式机器学习方法侧重于“数据并行性”，其中每个计算节点都需要存储所有参数和模型的重复项，这导致了通信和存储的巨大开销。</li><li>Distbelief模型 基于参数服务器的分布式框架</li></ul><p>本文的工作采用了基于参数服务器的框架，区别在于两种系统优化技术：</p><ul><li>本文设计了基于散列的特征标记方案，以实现并行和可扩展的数据预处理。 </li><li>本文通过请求聚合提高了通信效率。</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>提出了<strong>LinUOTD</strong>，一种用于预测大型在线出租车平台的单位原始出租车需求（UOTD）的统一方法。 </li><li>LinUOTD是具有超过<strong>2亿维特征</strong>的<strong>线性回归模型</strong>。 【简单的模型结构便于模型修改，而高维特征则保证了准确的预测性能。】</li><li>设计了<strong>一个时空正则化方案</strong>，<strong>一个分布式学习框架</strong>和<strong>一个基于散列的令牌化方法</strong>，以在大规模数据集上实现有效，并行和可扩展的特征学习。</li><li>对来自工业在线出租车平台的<strong>两个</strong>大规模数据集的广泛评估验证了我们方法的有效性。</li></ul>]]></content>
      
      
      <categories>
          
          <category> paper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> paper </tag>
            
            <tag> 论文笔记 </tag>
            
            <tag> traffic flow </tag>
            
            <tag> taxi demands </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/hexo-hello-World/"/>
      <url>/posts/hexo-hello-World/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
